{"contents":"'use strict';\nvar Negotiator = __fusereq(63);\nvar mime = __fusereq(64);\nmodule.exports = Accepts;\nfunction Accepts(req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req);\n  }\n  this.headers = req.headers;\n  this.negotiator = new Negotiator(req);\n}\nAccepts.prototype.type = Accepts.prototype.types = function (types_) {\n  var types = types_;\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length);\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i];\n    }\n  }\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes();\n  }\n  if (!this.headers.accept) {\n    return types[0];\n  }\n  var mimes = types.map(extToMime);\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime));\n  var first = accepts[0];\n  return first ? types[mimes.indexOf(first)] : false;\n};\nAccepts.prototype.encoding = Accepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_;\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length);\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i];\n    }\n  }\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings();\n  }\n  return this.negotiator.encodings(encodings)[0] || false;\n};\nAccepts.prototype.charset = Accepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_;\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length);\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i];\n    }\n  }\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets();\n  }\n  return this.negotiator.charsets(charsets)[0] || false;\n};\nAccepts.prototype.lang = Accepts.prototype.langs = Accepts.prototype.language = Accepts.prototype.languages = function (languages_) {\n  var languages = languages_;\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length);\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i];\n    }\n  }\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages();\n  }\n  return this.negotiator.languages(languages)[0] || false;\n};\nfunction extToMime(type) {\n  return type.indexOf('/') === -1 ? mime.lookup(type) : type;\n}\nfunction validMime(type) {\n  return typeof type === 'string';\n}\n"}