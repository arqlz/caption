{"contents":"'use strict';\nvar pathRegexp = __fusereq(62);\nvar debug = __fusereq(23)('express:router:layer');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nmodule.exports = Layer;\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n  debug('new %o', path);\n  var opts = options || ({});\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts);\n  this.regexp.fast_star = path === '*';\n  this.regexp.fast_slash = path === '/' && opts.end === false;\n}\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n  if (fn.length !== 4) {\n    return next(error);\n  }\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n  if (fn.length > 3) {\n    return next();\n  }\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\nLayer.prototype.match = function match(path) {\n  var match;\n  if (path != null) {\n    if (this.regexp.fast_slash) {\n      this.params = {};\n      this.path = '';\n      return true;\n    }\n    if (this.regexp.fast_star) {\n      this.params = {\n        '0': decode_param(path)\n      };\n      this.path = path;\n      return true;\n    }\n    match = this.regexp.exec(path);\n  }\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n  this.params = {};\n  this.path = match[0];\n  var keys = this.keys;\n  var params = this.params;\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i]);\n    if (val !== undefined || !hasOwnProperty.call(params, prop)) {\n      params[prop] = val;\n    }\n  }\n  return true;\n};\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n    throw err;\n  }\n}\n"}