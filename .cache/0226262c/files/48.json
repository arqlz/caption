{"contents":"'use strict';\nmodule.exports = vary;\nmodule.exports.append = append;\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\nfunction append(header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required');\n  }\n  if (!field) {\n    throw new TypeError('field argument is required');\n  }\n  var fields = !Array.isArray(field) ? parse(String(field)) : field;\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name');\n    }\n  }\n  if (header === '*') {\n    return header;\n  }\n  var val = header;\n  var vals = parse(header.toLowerCase());\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*';\n  }\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase();\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld);\n      val = val ? val + ', ' + fields[i] : fields[i];\n    }\n  }\n  return val;\n}\nfunction parse(header) {\n  var end = 0;\n  var list = [];\n  var start = 0;\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20:\n        if (start === end) {\n          start = end = i + 1;\n        }\n        break;\n      case 0x2c:\n        list.push(header.substring(start, end));\n        start = end = i + 1;\n        break;\n      default:\n        end = i + 1;\n        break;\n    }\n  }\n  list.push(header.substring(start, end));\n  return list;\n}\nfunction vary(res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    throw new TypeError('res argument is required');\n  }\n  var val = res.getHeader('Vary') || '';\n  var header = Array.isArray(val) ? val.join(', ') : String(val);\n  if (val = append(header, field)) {\n    res.setHeader('Vary', val);\n  }\n}\n"}