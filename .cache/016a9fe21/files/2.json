{"contents":"exports.__esModule = true;\nvar utils_1 = __fusereq(3);\nclass Presenter {\n  constructor(rec) {\n    this.mensajes = {};\n    this.queue = [];\n    this.raw = \"\";\n    this.stoped = false;\n    this.listennerMode = true;\n    var div = utils_1.createDiv({\n      width: \"100%\",\n      height: \"100%\"\n    });\n    div.className = \"msgContainner\";\n    div.id = \"core\";\n    let title = utils_1.createDiv({\n      margin: \"15px 0\"\n    });\n    title.innerHTML = `Id de la sala: ${roomId}`;\n    div.append(title);\n    if (rec) this.listennerMode = false;\n    this.control = utils_1.createDiv(\"navigation\");\n    var stopButton = utils_1.createElement(\"button\");\n    stopButton.innerHTML = \"STOP\";\n    stopButton.onclick = () => {\n      if (this.stoped && this.listennerMode) {\n        stopButton.classList.remove(\"disabled\");\n        stopButton.innerHTML = \"STOP\";\n        this.stoped = false;\n      } else {\n        stopButton.classList.add(\"disabled\");\n        stopButton.innerHTML = \"RESTART\";\n        this.stoped = true;\n      }\n      if (rec) {\n        console.log(\"STOP RECORDER\", rec);\n        rec.stop();\n      }\n    };\n    this.control.append(stopButton);\n    div.append(this.control);\n    this.transmissionContainner = utils_1.createDiv({\n      width: 400,\n      maxHeight: 200,\n      margin: \"auto auto\",\n      color: \"#ffffff\",\n      fontSize: 20,\n      display: \"flex\",\n      flexDirection: \"column\",\n      overflow: \"hidden\"\n    });\n    this.transmissionContainner.style.scrollBehavior = \"smooth\";\n    div.append(this.transmissionContainner);\n    document.body.append(div);\n  }\n  render() {\n    if (this.listennerMode == true && this.stoped) return;\n    while (this.queue.length) {\n      var mensaje = this.queue.splice(0, 1)[0];\n      if (!this.mensajes[mensaje.id]) {\n        var div = utils_1.createDiv(\"textRow\", {\n          marginRight: \"4pt\"\n        });\n        this.transmissionContainner.append(div);\n        this.mensajes[mensaje.id] = div;\n        this.mensajes[mensaje.id].innerHTML = mensaje.result;\n        this.transmissionContainner.scrollTo({\n          top: this.transmissionContainner.scrollHeight\n        });\n      } else {\n        this.mensajes[mensaje.id].innerHTML = mensaje.result;\n        this.transmissionContainner.scrollTo({\n          top: this.transmissionContainner.scrollHeight\n        });\n      }\n    }\n  }\n  append(data) {\n    this.queue.push(data);\n    this.render();\n  }\n  stop() {\n    this.stoped = true;\n  }\n  resume() {\n    this.stoped = false;\n    this.render();\n  }\n}\nexports.Presenter = Presenter;\nclass Presenter2 {\n  constructor(rec) {\n    this.lines = {};\n    this.queue = [];\n    this.raw = \"\";\n    var div = utils_1.createDiv({\n      width: \"100%\",\n      height: \"100%\"\n    });\n    div.className = \"msgContainner\";\n    this.control = utils_1.createDiv();\n    var stopButton = utils_1.createElement(\"button\");\n    stopButton.innerHTML = \"STOP\";\n    stopButton.onclick = () => {\n      stopButton.disabled = true;\n      if (rec) {\n        console.log(\"STOP RECORDER\", rec);\n        rec.stop();\n      }\n    };\n    this.control.append(stopButton);\n    div.append(this.control);\n    this.textContainner = utils_1.createDiv({\n      width: 350,\n      textAlign: \"center\",\n      margin: \"auto auto\",\n      color: \"#ffffff\",\n      fontSize: 20,\n      display: \"block\"\n    });\n    div.append(this.textContainner);\n    document.body.append(div);\n  }\n  append(data) {\n    this.queue.push(data);\n    if (!this.lines[data.id]) {\n      var div = utils_1.createDiv({\n        display: \"inline\",\n        marginRight: \"4pt\"\n      });\n      this.textContainner.append(div);\n      this.lines[data.id] = div;\n      this.lines[data.id].innerHTML = data.result;\n    } else {\n      this.lines[data.id].innerHTML = data.result;\n    }\n  }\n}\nexports.Presenter2 = Presenter2;\n","sourceMap":"{\"version\":3,\"sources\":[\"public/src/presenter.ts\"],\"names\":[\"constructor\",\"rec\",\"mensajes\",\"queue\",\"raw\",\"stoped\",\"listennerMode\",\"div\",\"utils_1\",\"width\",\"height\",\"className\",\"id\",\"title\",\"margin\",\"innerHTML\",\"roomId\",\"append\",\"control\",\"stopButton\",\"onclick\",\"classList\",\"remove\",\"add\",\"console\",\"log\",\"stop\",\"transmissionContainner\",\"maxHeight\",\"color\",\"fontSize\",\"display\",\"flexDirection\",\"overflow\",\"style\",\"scrollBehavior\",\"document\",\"body\",\"render\",\"length\",\"mensaje\",\"splice\",\"marginRight\",\"result\",\"scrollTo\",\"top\",\"scrollHeight\",\"data\",\"push\",\"resume\",\"lines\",\"disabled\",\"textContainner\",\"textAlign\"],\"mappings\":\";;AAGO;EAQHA,YAAaC;SALbC;SACAC;SACAC,MAAc;SACdC,SAAkB;SAClBC,gBAAyB;QAEjBC,MAAMC;MAAWC,OAAO;MAAQC,QAAQ;;IAC5CH,IAAII,YAAU;IACdJ,IAAIK,KAAK;QAELC,QAAQL;MAAWM,QAAQ;;IAC/BD,MAAME,8BAA8BC;IACpCT,IAAIU,OAAOJ;QAEPZ,KAAK,KAAKK,gBAAgB;IAE9B,KAAKY,UAAUV,kBAAU;QACrBW,aAAaX,sBAAc;IAC/BW,WAAWJ,YAAY;IACvBI,WAAWC,UAAU;UACb,KAAKf,UAAU,KAAKC;QACpBa,WAAWE,UAAUC,OAAO;QAC5BH,WAAWJ,YAAY;QACvB,KAAKV,SAAS;;QAEdc,WAAWE,UAAUE,IAAI;QACzBJ,WAAWJ,YAAY;QACvB,KAAKV,SAAS;;UAGfJ;QACCuB,QAAQC,IAAI,iBAAiBxB;QAC7BA,IAAIyB;;;IAGZ,KAAKR,QAAQD,OAAOE;IACpBZ,IAAIU,OAAO,KAAKC;IAEhB,KAAKS,yBAAyBnB;MAAWC,OAAO;MAAKmB,WAAW;MAAMd,QAAQ;MAAae,OAAO;MAAWC,UAAU;MACvHC,SAAS;MAAQC,eAAe;MAAUC,UAAU;;IACpD,KAAKN,uBAAuBO,MAAMC,iBAAiB;IACnD5B,IAAIU,OAAO,KAAKU;IAEhBS,SAASC,KAAKpB,OAAOV;;EAEjB+B;QACA,KAAKhC,iBAAiB,QAAQ,KAAKD;WACjC,KAAKF,MAAMoC;UACTC,UAAU,KAAKrC,MAAMsC,OAAO,GAAG,GAAG;WACjC,KAAKvC,SAASsC,QAAQ5B;YACnBL,MAAMC,kBAAU;UAAYkC,aAAa;;QAC7C,KAAKf,uBAAuBV,OAAOV;QACnC,KAAKL,SAASsC,QAAQ5B,MAAML;QAC5B,KAAKL,SAASsC,QAAQ5B,IAAIG,YAAYyB,QAAQG;QAC9C,KAAKhB,uBAAuBiB;UAAUC,KAAK,KAAKlB,uBAAuBmB;;;QAEvE,KAAK5C,SAASsC,QAAQ5B,IAAIG,YAAYyB,QAAQG;QAC9C,KAAKhB,uBAAuBiB;UAAUC,KAAK,KAAKlB,uBAAuBmB;;;;;EAKnF7B,OAAO8B;IACH,KAAK5C,MAAM6C,KAAKD;IAChB,KAAKT;;EAETZ;IACI,KAAKrB,SAAS;;EAElB4C;IACI,KAAK5C,SAAS;IACd,KAAKiC;;;;AAGN;EAMHtC,YAAYC;SAHZiD;SACA/C;SACAC,MAAc;QAENG,MAAMC;MAAWC,OAAO;MAAQC,QAAQ;;IAC5CH,IAAII,YAAU;IAEd,KAAKO,UAAUV;QACXW,aAAaX,sBAAc;IAC/BW,WAAWJ,YAAY;IACvBI,WAAWC,UAAU;MACjBD,WAAWgC,WAAW;UACnBlD;QACCuB,QAAQC,IAAI,iBAAiBxB;QAC7BA,IAAIyB;;;IAGZ,KAAKR,QAAQD,OAAOE;IACpBZ,IAAIU,OAAO,KAAKC;IAEhB,KAAKkC,iBAAiB5C;MAAWC,OAAO;MAAK4C,WAAW;MAAUvC,QAAQ;MAAae,OAAO;MAAWC,UAAU;MAAIC,SAAS;;IAChIxB,IAAIU,OAAO,KAAKmC;IAEhBhB,SAASC,KAAKpB,OAAOV;;EAEzBU,OAAO8B;IACH,KAAK5C,MAAM6C,KAAKD;SAEX,KAAKG,MAAMH,KAAKnC;UACbL,MAAMC;QAAWuB,SAAS;QAAUW,aAAa;;MACrD,KAAKU,eAAenC,OAAOV;MAC3B,KAAK2C,MAAMH,KAAKnC,MAAML;MACtB,KAAK2C,MAAMH,KAAKnC,IAAIG,YAAYgC,KAAKJ;;MAErC,KAAKO,MAAMH,KAAKnC,IAAIG,YAAYgC,KAAKJ\",\"sourcesContent\":[\"import { createDiv, createElement } from \\\"./components/utils\\\"\\r\\ndeclare const roomId: string;\\r\\n\\r\\nexport class Presenter {\\r\\n    transmissionContainner: HTMLDivElement;\\r\\n    control: HTMLDivElement;\\r\\n    mensajes: {[id: string]: HTMLDivElement} = {}\\r\\n    queue: {result: string, id: string}[] = []\\r\\n    raw: string = \\\"\\\"\\r\\n    stoped: boolean = false;\\r\\n    listennerMode: boolean = true;\\r\\n    constructor( rec?) {\\r\\n        var div = createDiv({width: \\\"100%\\\", height: \\\"100%\\\"})\\r\\n        div.className=\\\"msgContainner\\\";\\r\\n        div.id = \\\"core\\\"\\r\\n\\r\\n        let title = createDiv({margin: \\\"15px 0\\\"})\\r\\n        title.innerHTML = `Id de la sala: ${roomId}`;\\r\\n        div.append(title)\\r\\n\\r\\n        if (rec) this.listennerMode = false;\\r\\n\\r\\n        this.control = createDiv(\\\"navigation\\\")\\r\\n        var stopButton = createElement(\\\"button\\\")\\r\\n        stopButton.innerHTML = \\\"STOP\\\"\\r\\n        stopButton.onclick = () => {\\r\\n            if (this.stoped && this.listennerMode) {\\r\\n                stopButton.classList.remove(\\\"disabled\\\")\\r\\n                stopButton.innerHTML = \\\"STOP\\\"\\r\\n                this.stoped = false;\\r\\n            } else {\\r\\n                stopButton.classList.add(\\\"disabled\\\")\\r\\n                stopButton.innerHTML = \\\"RESTART\\\"\\r\\n                this.stoped = true;\\r\\n            }\\r\\n           \\r\\n            if(rec) {\\r\\n                console.log(\\\"STOP RECORDER\\\", rec)\\r\\n                rec.stop()\\r\\n            }\\r\\n        }\\r\\n        this.control.append(stopButton)\\r\\n        div.append(this.control)\\r\\n\\r\\n        this.transmissionContainner = createDiv({width: 400, maxHeight: 200,  margin: \\\"auto auto\\\", color: \\\"#ffffff\\\", fontSize: 20, \\r\\n        display: \\\"flex\\\", flexDirection: \\\"column\\\", overflow: \\\"hidden\\\"})\\r\\n        this.transmissionContainner.style.scrollBehavior = \\\"smooth\\\";\\r\\n        div.append(this.transmissionContainner)\\r\\n\\r\\n        document.body.append(div)\\r\\n    }\\r\\n    private render() {\\r\\n        if (this.listennerMode == true && this.stoped) return;\\r\\n        while(this.queue.length) {\\r\\n            var mensaje = this.queue.splice(0, 1)[0];\\r\\n            if (!this.mensajes[mensaje.id]) {\\r\\n                var div = createDiv(\\\"textRow\\\",{ marginRight: \\\"4pt\\\"});\\r\\n                this.transmissionContainner.append(div);\\r\\n                this.mensajes[mensaje.id] = div;\\r\\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\\r\\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\\r\\n            } else {\\r\\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\\r\\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\\r\\n            }\\r\\n        }\\r\\n     \\r\\n    }\\r\\n    append(data: {result: string, id: string}) {\\r\\n        this.queue.push(data)   \\r\\n        this.render();  \\r\\n    }\\r\\n    stop() {\\r\\n        this.stoped = true;\\r\\n    }\\r\\n    resume() {\\r\\n        this.stoped = false;\\r\\n        this.render();\\r\\n    }\\r\\n}\\r\\nexport class Presenter2 {\\r\\n    textContainner: HTMLDivElement;\\r\\n    control: HTMLDivElement;\\r\\n    lines: {[id: string]: HTMLDivElement} = {}\\r\\n    queue: {result: string, id: string}[] = []\\r\\n    raw: string = \\\"\\\"\\r\\n    constructor(rec?) {\\r\\n        var div = createDiv({width: \\\"100%\\\", height: \\\"100%\\\"})\\r\\n        div.className=\\\"msgContainner\\\";\\r\\n\\r\\n        this.control = createDiv()\\r\\n        var stopButton = createElement(\\\"button\\\")\\r\\n        stopButton.innerHTML = \\\"STOP\\\"\\r\\n        stopButton.onclick = () => {\\r\\n            stopButton.disabled = true\\r\\n            if(rec) {\\r\\n                console.log(\\\"STOP RECORDER\\\", rec)\\r\\n                rec.stop()\\r\\n            }\\r\\n        }\\r\\n        this.control.append(stopButton)\\r\\n        div.append(this.control)\\r\\n\\r\\n        this.textContainner = createDiv({width: 350, textAlign: \\\"center\\\", margin: \\\"auto auto\\\", color: \\\"#ffffff\\\", fontSize: 20, display: \\\"block\\\"})\\r\\n        div.append(this.textContainner)\\r\\n\\r\\n        document.body.append(div)\\r\\n    }\\r\\n    append(data: {result: string, id: string}) {\\r\\n        this.queue.push(data)   \\r\\n\\r\\n        if (!this.lines[data.id]) {\\r\\n            var div = createDiv({display: \\\"inline\\\", marginRight: \\\"4pt\\\"});\\r\\n            this.textContainner.append(div);\\r\\n            this.lines[data.id] = div;\\r\\n            this.lines[data.id].innerHTML = data.result;\\r\\n        } else {\\r\\n            this.lines[data.id].innerHTML = data.result;\\r\\n        }\\r\\n      \\r\\n    }\\r\\n}\\r\\n\"]}"}