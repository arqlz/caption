{"contents":"exports.__esModule = true;\nvar utils_1 = __fusereq(3);\nfunction span(msg, clases = null) {\n  var div = utils_1.createDiv(\"span\");\n  if (clases) div.classList.add(clases);\n  div.contentEditable = \"true\";\n  div.innerHTML = msg.result;\n  return div;\n}\nclass TextEditor {\n  constructor(doc, div) {\n    this.itemes = new Map();\n    this.changed = false;\n    this.onChange = e => {\n      this.doc.get(e.target.id).result = e.target.innerText;\n      this.changed = true;\n    };\n    this.onSave = e => {\n      if (this.changed) {\n        this.doc.save().then(console.log, console.error);\n        this.changed = false;\n      }\n    };\n    this.containner = div;\n    this.doc = doc;\n  }\n  append(msg) {\n    let spanMsg;\n    if (this.itemes.size == 0) spanMsg = span(msg, \"title\"); else spanMsg = span(msg);\n    spanMsg.addEventListener(\"input\", this.onChange);\n    spanMsg.addEventListener(\"blur\", this.onSave);\n    let id = msg.id.toString();\n    spanMsg.id = id;\n    this.itemes.set(id, {\n      div: spanMsg,\n      msg\n    });\n    this.containner.append(spanMsg);\n  }\n  clearMark() {\n    for (let el of this.containner.children) el.classList.remove(\"selected\");\n    return this;\n  }\n  mark(id) {\n    this.itemes.get(id).div.classList.add(\"selected\");\n    return this;\n  }\n}\nfunction generarTextEditor(doc, containner) {\n  var mensajes = [];\n  for (let msg of doc.itemes) {\n    if (mensajes.length && mensajes[mensajes.length - 1].id == msg.id) {\n      mensajes[mensajes.length - 1] = msg;\n    } else {\n      mensajes.push(msg);\n    }\n  }\n  var div = utils_1.createDiv(\"textEditor\");\n  var editor = new TextEditor(doc, div);\n  for (let i = 0; i < mensajes.length; i++) {\n    let msg = mensajes[i];\n    editor.append(msg);\n  }\n  containner.append(div);\n  return editor;\n}\nexports.generarTextEditor = generarTextEditor;\n","sourceMap":"{\"version\":3,\"sources\":[\"public/src/components/texteditor.ts\"],\"names\":[\"msg\",\"clases\",\"div\",\"utils_1\",\"classList\",\"add\",\"contentEditable\",\"innerHTML\",\"result\",\"constructor\",\"doc\",\"itemes\",\"Map\",\"changed\",\"onChange\",\"e\",\"get\",\"target\",\"id\",\"innerText\",\"onSave\",\"save\",\"then\",\"console\",\"log\",\"error\",\"containner\",\"append\",\"spanMsg\",\"size\",\"span\",\"addEventListener\",\"toString\",\"set\",\"clearMark\",\"el\",\"children\",\"remove\",\"mark\",\"mensajes\",\"length\",\"push\",\"editor\",\"TextEditor\",\"i\"],\"mappings\":\";;AAIA,cAAcA,KAAWC,SAAS;MAC1BC,MAAMC,kBAAU;MAChBF,QAAQC,IAAIE,UAAUC,IAAIJ;EAC9BC,IAAII,kBAAkB;EACtBJ,IAAIK,YAAYP,IAAIQ;SACbN;;AAGX;EAOIO,YAAYC,KAA4BR;SALxCS,aAAyDC;SAEzDC,UAAU;SA0BVC,WAAW,AAACC;MACR,KAAKL,IAAIM,IAAID,EAAEE,OAAOC,IAAIV,SAASO,EAAEE,OAAOE;MAC5C,KAAKN,UAAU;;SAEnBO,SAAS,AAACL;UACF,KAAKF;QACL,KAAKH,IAAIW,OAAOC,KAAKC,QAAQC,KAAKD,QAAQE;QAC1C,KAAKZ,UAAU;;;IA7BnB,KAAKa,aAAaxB;IAClB,KAAKQ,MAAMA;;EAEfiB,OAAO3B;QACC4B;QACA,KAAKjB,OAAOkB,QAAQ,GAAGD,UAAUE,KAAK9B,KAAK,eAC1C4B,UAAUE,KAAK9B;IACpB4B,QAAQG,iBAAiB,SAAS,KAAKjB;IACvCc,QAAQG,iBAAiB,QAAQ,KAAKX;QAClCF,KAAKlB,IAAIkB,GAAGc;IAChBJ,QAAQV,KAAKA;IACb,KAAKP,OAAOsB,IAAIf;MAAKhB,KAAK0B;MAAS5B;;IACnC,KAAK0B,WAAWC,OAAOC;;EAE3BM;aACaC,MAAM,KAAKT,WAAWU,UAAUD,GAAG/B,UAAUiC,OAAO;WACtD;;EAEXC,KAAKpB;IACD,KAAKP,OAAOK,IAAIE,IAAIhB,IAAIE,UAAUC,IAAI;WAC/B;;;AAcR,2BAA2BK,KAA4BgB;MACtDa;WAEKvC,OAAOU,IAAIC;QACZ4B,SAASC,UAAUD,SAASA,SAASC,SAAO,GAAGtB,MAAMlB,IAAIkB;MACzDqB,SAASA,SAASC,SAAO,KAAKxC;;MAE9BuC,SAASE,KAAKzC;;;MAIlBE,MAAMC,kBAAU;MAEhBuC,aAAaC,WAAWjC,KAAKR;WAExB0C,IAAI,GAAGA,IAAIL,SAASC,QAAQI;QAC7B5C,MAAMuC,SAASK;IACnBF,OAAOf,OAAO3B;;EAGlB0B,WAAWC,OAAOzB;SACXwC\",\"sourcesContent\":[\"import { IMsg, TranscriptionDocument } from \\\"../utils/document\\\";\\r\\nimport { createDiv } from \\\"./utils\\\";\\r\\n\\r\\n\\r\\nfunction span(msg: IMsg, clases = null) {\\r\\n    var div = createDiv(\\\"span\\\");\\r\\n    if (clases) div.classList.add(clases)\\r\\n    div.contentEditable = \\\"true\\\";\\r\\n    div.innerHTML = msg.result\\r\\n    return div\\r\\n}\\r\\n\\r\\nclass TextEditor {\\r\\n    containner: HTMLElement;\\r\\n    itemes: Map<string, {div: HTMLElement, msg: IMsg}> = new Map();\\r\\n    doc: TranscriptionDocument;\\r\\n    changed = false;\\r\\n\\r\\n\\r\\n    constructor(doc: TranscriptionDocument, div: HTMLElement) {\\r\\n        this.containner = div;   \\r\\n        this.doc = doc;  \\r\\n    }\\r\\n    append(msg: IMsg) {\\r\\n        let spanMsg: HTMLElement;\\r\\n        if (this.itemes.size == 0) spanMsg = span(msg, \\\"title\\\")\\r\\n        else spanMsg = span(msg)\\r\\n        spanMsg.addEventListener(\\\"input\\\", this.onChange)\\r\\n        spanMsg.addEventListener(\\\"blur\\\", this.onSave)\\r\\n        let id = msg.id.toString();\\r\\n        spanMsg.id = id;  \\r\\n        this.itemes.set(id, {div: spanMsg, msg})\\r\\n        this.containner.append(spanMsg)  \\r\\n    }\\r\\n    clearMark() {\\r\\n        for (let el of this.containner.children) el.classList.remove(\\\"selected\\\")\\r\\n        return this\\r\\n    }\\r\\n    mark(id: string) {\\r\\n        this.itemes.get(id).div.classList.add(\\\"selected\\\")\\r\\n        return this\\r\\n    }\\r\\n    onChange = (e) => {\\r\\n        this.doc.get(e.target.id).result = e.target.innerText;\\r\\n        this.changed = true;\\r\\n    }\\r\\n    onSave = (e) => {\\r\\n        if (this.changed) {\\r\\n            this.doc.save().then(console.log, console.error)\\r\\n            this.changed = false\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nexport function generarTextEditor(doc: TranscriptionDocument, containner: HTMLElement) {\\r\\n    var mensajes: IMsg[] = [];\\r\\n\\r\\n    for (let msg of doc.itemes) {\\r\\n        if (mensajes.length && mensajes[mensajes.length-1].id == msg.id) {\\r\\n            mensajes[mensajes.length-1] = msg;\\r\\n        } else {\\r\\n            mensajes.push(msg)\\r\\n        }\\r\\n    }\\r\\n\\r\\n    var div = createDiv(\\\"textEditor\\\");\\r\\n    //div.contentEditable = \\\"true\\\";\\r\\n    var editor = new TextEditor(doc, div)\\r\\n\\r\\n    for (let i = 0; i < mensajes.length; i++) {\\r\\n        let msg = mensajes[i]\\r\\n        editor.append(msg)\\r\\n    }\\r\\n\\r\\n    containner.append(div)\\r\\n    return editor;\\r\\n}\"]}"}