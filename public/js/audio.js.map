{"version":3,"sources":["public/src/components/utils.ts","public/src/presenter.ts","public/src/emiterClient.ts"],"names":["pixelFields","div","style","Object","keys","forEach","k","is_number","indexOf","type","styleOrClass","__style","__className","document","createElement","className","applyStyle","constructor","rec","mensajes","queue","raw","stoped","listennerMode","utils_1","width","height","id","title","margin","innerHTML","roomId","append","control","stopButton","onclick","classList","remove","add","console","log","stop","transmissionContainner","maxHeight","color","fontSize","display","flexDirection","overflow","scrollBehavior","body","render","length","mensaje","splice","marginRight","result","scrollTo","top","scrollHeight","data","push","resume","lines","disabled","textContainner","textAlign","isAvailable","onData","blob","start","time","navigator","mediaDevices","getUserMedia","audio","then","stream","recorder","MediaRecorder","mimeType","ondataavailable","e","form","FormData","Promise","socket","emit","io","once","Recorder","presenter","presenter_1","sendBlob","on","info","eventTitle","roomkey","location","pathname","Error","split","slice","roomKey","language","connect"],"mappings":"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","file":"","sourcesContent":["const pixelFields = [\"margin\", \"marginLeft\", \"marginRight\", \"marginTop\",\"marginBottom\", \r\n    \"padding\", \"paddingLeft\", \"paddingRight\", \"paddingTop\",\"paddingBottom\",\r\n    \"left\", \"top\", \"right\", \"bottom\",\"width\",\"height\", \"minWidth\", \"minHeight\", \r\n    \"maxWidth\", \"maxHeight\", \"borderWidth\"]\r\nexport function applyStyle(div: HTMLElement, style: any) {\r\n    Object.keys(style || {}).forEach(k => {\r\n        let is_number = pixelFields.indexOf(k) >= 0\r\n        if (is_number && typeof style[k] == \"number\") div.style[k] = style[k]+\"px\"\r\n        else div.style[k] = style[k]\r\n   \r\n    })\r\n}\r\n\r\n\r\ninterface  ICreateElement {\r\n    (type: \"button\", styleOrClass?: string | object, style?: object): HTMLButtonElement;\r\n    (type: \"div\", styleOrClass?: string | object, style?: object): HTMLDivElement;\r\n    (type: string, styleOrClass?: string | object, style?: object): HTMLElement;\r\n}\r\nexport const createElement: ICreateElement = (type: string, styleOrClass?: string | object, style?: object) => {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(type)\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div as any\r\n} \r\n\r\nexport function createDiv(styleOrClass?: string | object, style?: object) {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(\"div\")\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div\r\n}\r\n","import { createDiv, createElement } from \"./components/utils\"\r\ndeclare const roomId: string;\r\n\r\nexport class Presenter {\r\n    transmissionContainner: HTMLDivElement;\r\n    control: HTMLDivElement;\r\n    mensajes: {[id: string]: HTMLDivElement} = {}\r\n    queue: {result: string, id: string}[] = []\r\n    raw: string = \"\"\r\n    stoped: boolean = false;\r\n    listennerMode: boolean = true;\r\n    constructor( rec?) {\r\n        var div = createDiv({width: \"100%\", height: \"100%\"})\r\n        div.className=\"msgContainner\";\r\n        div.id = \"core\"\r\n\r\n        let title = createDiv({margin: \"15px 0\"})\r\n        title.innerHTML = `Id de la sala: ${roomId}`;\r\n        div.append(title)\r\n\r\n        if (rec) this.listennerMode = false;\r\n\r\n        this.control = createDiv(\"navigation\")\r\n        var stopButton = createElement(\"button\")\r\n        stopButton.innerHTML = \"STOP\"\r\n        stopButton.onclick = () => {\r\n            if (this.stoped && this.listennerMode) {\r\n                stopButton.classList.remove(\"disabled\")\r\n                stopButton.innerHTML = \"STOP\"\r\n                this.stoped = false;\r\n            } else {\r\n                stopButton.classList.add(\"disabled\")\r\n                stopButton.innerHTML = \"RESTART\"\r\n                this.stoped = true;\r\n            }\r\n           \r\n            if(rec) {\r\n                console.log(\"STOP RECORDER\", rec)\r\n                rec.stop()\r\n            }\r\n        }\r\n        this.control.append(stopButton)\r\n        div.append(this.control)\r\n\r\n        this.transmissionContainner = createDiv({width: 400, maxHeight: 200,  margin: \"auto auto\", color: \"#ffffff\", fontSize: 20, \r\n        display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"})\r\n        this.transmissionContainner.style.scrollBehavior = \"smooth\";\r\n        div.append(this.transmissionContainner)\r\n\r\n        document.body.append(div)\r\n    }\r\n    private render() {\r\n        if (this.listennerMode == true && this.stoped) return;\r\n        while(this.queue.length) {\r\n            var mensaje = this.queue.splice(0, 1)[0];\r\n            if (!this.mensajes[mensaje.id]) {\r\n                var div = createDiv(\"textRow\",{ marginRight: \"4pt\"});\r\n                this.transmissionContainner.append(div);\r\n                this.mensajes[mensaje.id] = div;\r\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\r\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\r\n            } else {\r\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\r\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\r\n            }\r\n        }\r\n     \r\n    }\r\n    append(data: {result: string, id: string}) {\r\n        this.queue.push(data)   \r\n        this.render();  \r\n    }\r\n    stop() {\r\n        this.stoped = true;\r\n    }\r\n    resume() {\r\n        this.stoped = false;\r\n        this.render();\r\n    }\r\n}\r\nexport class Presenter2 {\r\n    textContainner: HTMLDivElement;\r\n    control: HTMLDivElement;\r\n    lines: {[id: string]: HTMLDivElement} = {}\r\n    queue: {result: string, id: string}[] = []\r\n    raw: string = \"\"\r\n    constructor(rec?) {\r\n        var div = createDiv({width: \"100%\", height: \"100%\"})\r\n        div.className=\"msgContainner\";\r\n\r\n        this.control = createDiv()\r\n        var stopButton = createElement(\"button\")\r\n        stopButton.innerHTML = \"STOP\"\r\n        stopButton.onclick = () => {\r\n            stopButton.disabled = true\r\n            if(rec) {\r\n                console.log(\"STOP RECORDER\", rec)\r\n                rec.stop()\r\n            }\r\n        }\r\n        this.control.append(stopButton)\r\n        div.append(this.control)\r\n\r\n        this.textContainner = createDiv({width: 350, textAlign: \"center\", margin: \"auto auto\", color: \"#ffffff\", fontSize: 20, display: \"block\"})\r\n        div.append(this.textContainner)\r\n\r\n        document.body.append(div)\r\n    }\r\n    append(data: {result: string, id: string}) {\r\n        this.queue.push(data)   \r\n\r\n        if (!this.lines[data.id]) {\r\n            var div = createDiv({display: \"inline\", marginRight: \"4pt\"});\r\n            this.textContainner.append(div);\r\n            this.lines[data.id] = div;\r\n            this.lines[data.id].innerHTML = data.result;\r\n        } else {\r\n            this.lines[data.id].innerHTML = data.result;\r\n        }\r\n      \r\n    }\r\n}\r\n","import { Presenter } from \"./presenter\"\r\ndeclare const io : typeof import(\"socket.io-client\").default\r\nclass Recorder {\r\n    private isAvailable = false\r\n    onData = (blob: Blob) => null\r\n    recorder: MediaRecorder\r\n    start(time = 4000) {\r\n        navigator.mediaDevices.getUserMedia({audio: true}).then(stream => {\r\n            var recorder = new MediaRecorder(stream, {mimeType: 'audio/webm;codecs=opus'})\r\n            recorder.ondataavailable = (e) => {                \r\n                this.onData(e.data)\r\n            }\r\n            this.recorder = recorder\r\n            recorder.start(time)\r\n            this.isAvailable = true;\r\n        })\r\n    }\r\n    stop() {\r\n        if (this.isAvailable) {\r\n            this.isAvailable = false;\r\n            this.recorder.stop()\r\n        }  \r\n    }\r\n}\r\n\r\nfunction sendBlob(blob: Blob): Promise<string> {\r\n    var form = new FormData()\r\n    form.append(\"blob\", blob)\r\n    return new Promise(() => {\r\n        socket.emit(\"blob\", blob)\r\n    })\r\n}\r\n\r\nvar socket = io()\r\n\r\nvar rec: Recorder \r\nsocket.once(\"ready\", () => {\r\n    console.log(\"Starting recorder\")\r\n    if (rec) {\r\n        rec.stop()\r\n        rec = new Recorder()\r\n    } else {\r\n        rec = new Recorder()\r\n    }\r\n\r\n    var presenter = new Presenter(rec)\r\n    rec.onData = blob => {\r\n        sendBlob(blob)   \r\n    }\r\n\r\n    rec.start()\r\n\r\n    socket.on(\"mensaje\", data => {\r\n        presenter.append(data)\r\n    })\r\n    socket.on(\"info\", (info: {photoUrl: string, eventTitle: string}) => {\r\n        presenter.title = info.eventTitle;\r\n        console.log(\"on info\", info)\r\n    })\r\n})\r\n\r\nsocket.on(\"disconnect\", () => {\r\n    if (rec) {\r\n        rec.stop()\r\n        rec = null\r\n    }\r\n})\r\nsocket.on(\"connect\", () => {    \r\n    var roomkey = location.pathname || \"\"\r\n    if (roomkey.length < 2) throw new Error(\"sala invalida\")\r\n    roomkey = roomkey.split(\"/\").slice(2)[0];\r\n    socket.emit(\"broadcast\", {roomKey: roomkey, language: \"es-DO\"});  \r\n})\r\nsocket.connect()"]}