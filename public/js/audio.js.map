{"version":3,"sources":["public/src/emiterClient.ts","public/src/components/utils.ts","public/src/presenter.ts"],"names":["isAvailable","onData","blob","startTime","listenners","start","time","navigator","mediaDevices","getUserMedia","audio","then","stream","recorder","MediaRecorder","mimeType","Date","now","ondataavailable","e","data","stop","cb","onStop","push","form","FormData","append","Promise","socket","emit","io","rec","presenter","once","console","log","sendBlob","on","interval","setInterval","timeElapsed","clearInterval","error","roomkey","location","pathname","length","Error","split","slice","Recorder","info","presenter_1","roomId","title","eventTitle","roomKey","language","connect","pixelFields","div","style","Object","keys","forEach","k","is_number","indexOf","type","styleOrClass","__style","__className","document","createElement","className","applyStyle","constructor","mensajes","queue","raw","stoped","listennerMode","elements","__title","utils_1","width","height","id","header","margin","innerHTML","roomData","svg","paddingLeft","classList","add","src","onclick","documentElement","requestFullscreen","timeCounter","fontSize","fontWeight","control","stopButton","remove","irAlEditor","href","transmissionContainner","maxHeight","color","display","flexDirection","overflow","scrollBehavior","body","value","toString","render","mensaje","splice","marginRight","result","scrollTo","top","scrollHeight","resume"],"mappings":"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","file":"","sourcesContent":["import { Presenter } from \"./presenter\"\r\ndeclare const io : typeof import(\"socket.io-client\").default\r\nclass Recorder {\r\n    private isAvailable = false\r\n    onData = (blob: Blob) => null\r\n    recorder: MediaRecorder\r\n    startTime = 0;\r\n    start(time = 4000) {\r\n        navigator.mediaDevices.getUserMedia({audio: true}).then(stream => {\r\n            var recorder = new MediaRecorder(stream, {mimeType: 'audio/webm;codecs=opus'})\r\n            this.startTime = Date.now();\r\n            recorder.ondataavailable = (e) => {                \r\n                this.onData(e.data)\r\n            }\r\n            this.recorder = recorder\r\n            recorder.start(time)\r\n            this.isAvailable = true;     \r\n        })\r\n    }\r\n    stop() {\r\n        if (this.isAvailable) {\r\n            this.isAvailable = false;\r\n            this.recorder.stop()\r\n            for (let cb of this.listenners) cb()\r\n        }  \r\n    }\r\n    private listenners = [];\r\n    onStop(cb) {\r\n        this.listenners.push(cb)\r\n    }\r\n}\r\n\r\nfunction sendBlob(blob: Blob): Promise<string> {\r\n    var form = new FormData()\r\n    form.append(\"blob\", blob)\r\n    return new Promise(() => {\r\n        socket.emit(\"blob\", blob)\r\n    })\r\n}\r\n\r\n\r\nvar socket = io()\r\n\r\nvar rec: Recorder \r\nvar presenter : Presenter\r\nsocket.once(\"ready\", () => {\r\n    console.log(\"Starting recorder\")\r\n    rec.onData = blob => {\r\n        sendBlob(blob)   \r\n    }\r\n    rec.start()\r\n    socket.on(\"mensaje\", data => {\r\n        presenter.append(data)\r\n    })\r\n    var interval = setInterval(() => {\r\n        presenter.timeElapsed =  Date.now() - rec.startTime  \r\n    }, 200)\r\n\r\n    rec.onStop(() => {\r\n        clearInterval(interval);\r\n    })\r\n\r\n})\r\n\r\nsocket.on(\"disconnect\", () => {\r\n    if (rec) {\r\n        rec.stop()\r\n        rec = null\r\n    }\r\n})\r\nsocket.on(\"error\", (data) => {\r\n    console.error(data)\r\n})\r\nsocket.on(\"connect\", () => {    \r\n    var roomkey = location.pathname || \"\"\r\n    if (roomkey.length < 2) throw new Error(\"sala invalida\")\r\n    roomkey = roomkey.split(\"/\").slice(2)[0];\r\n\r\n    if (rec) {\r\n        rec.stop()\r\n    }   \r\n    \r\n    rec = new Recorder()\r\n    socket.on(\"info\", (info: {photoUrl: string, eventTitle: string, roomId: string}) => {\r\n        presenter = new Presenter(info.roomId, rec, roomkey)\r\n        presenter.title = info.eventTitle;\r\n        console.log(\"on info\", info)\r\n    })\r\n\r\n    socket.emit(\"broadcast\", {roomKey: roomkey, language: \"es-DO\"}); \r\n    \r\n    \r\n})\r\nsocket.connect()","const pixelFields = [\"margin\", \"marginLeft\", \"marginRight\", \"marginTop\",\"marginBottom\", \r\n    \"padding\", \"paddingLeft\", \"paddingRight\", \"paddingTop\",\"paddingBottom\",\r\n    \"left\", \"top\", \"right\", \"bottom\",\"width\",\"height\", \"minWidth\", \"minHeight\", \r\n    \"maxWidth\", \"maxHeight\", \"borderWidth\"]\r\nexport function applyStyle(div: HTMLElement, style: any) {\r\n    Object.keys(style || {}).forEach(k => {\r\n        let is_number = pixelFields.indexOf(k) >= 0\r\n        if (is_number && typeof style[k] == \"number\") div.style[k] = style[k]+\"px\"\r\n        else div.style[k] = style[k]\r\n   \r\n    })\r\n}\r\n\r\n\r\ninterface  ICreateElement {\r\n    (type: \"button\", styleOrClass?: string | object, style?: object): HTMLButtonElement;\r\n    (type: \"div\", styleOrClass?: string | object, style?: object): HTMLDivElement;\r\n    (type: string, styleOrClass?: string | object, style?: object): HTMLElement;\r\n}\r\nexport const createElement: ICreateElement = (type: string, styleOrClass?: string | object, style?: object) => {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(type)\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div as any\r\n} \r\n\r\nexport function createDiv(styleOrClass?: string | object, style?: object) {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(\"div\")\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div\r\n}\r\n","import { createDiv, createElement } from \"./components/utils\"\r\n\r\n\r\nexport class Presenter {\r\n    transmissionContainner: HTMLDivElement;\r\n    control: HTMLDivElement;\r\n    mensajes: {[id: string]: HTMLDivElement} = {}\r\n    queue: {result: string, id: string}[] = []\r\n    raw: string = \"\"\r\n    stoped: boolean = false;\r\n    listennerMode: boolean = true;\r\n\r\n    elements: {title?: HTMLElement, roomData?: HTMLElement, timeCounter?: HTMLElement} = {}\r\n\r\n    private __title = \"\";\r\n    constructor( roomId: string, rec?, roomKey?: string) {\r\n        var div = createDiv({width: \"100%\", height: \"100%\"})\r\n        div.className=\"msgContainner\";\r\n        div.id = \"core\"\r\n\r\n        var header = createDiv(\"header\")\r\n        div.append(header)\r\n\r\n        let title = createElement(\"h2\", {margin: \"15px 0\"})\r\n        title.innerHTML = ``;       \r\n        header.append(title)\r\n        this.elements.title = title;\r\n\r\n        let roomData = createDiv({margin: \"15px 0\"})\r\n        roomData.innerHTML = `Id de la sala: ${roomId}`;  \r\n        let svg = createElement(\"img\",  {paddingLeft: 10}) as HTMLImageElement;\r\n        svg.classList.add(\"fullscreen\")\r\n        svg.src = \"/images/fullscreen.svg\";\r\n        svg.onclick = () => {\r\n            document.documentElement.requestFullscreen()\r\n        }\r\n        roomData.append(svg)     \r\n        header.append(roomData)\r\n        this.elements.roomData = roomData;\r\n\r\n        let timeCounter = createDiv({margin: \"15px 0\", fontSize: 30, fontWeight: 600})\r\n        timeCounter.innerHTML = ``;       \r\n        header.append(timeCounter)\r\n        this.elements.timeCounter = timeCounter;\r\n\r\n\r\n        if (rec) this.listennerMode = false;\r\n\r\n        this.control = createDiv(\"navigation\")\r\n        var stopButton = createElement(\"button\")\r\n        stopButton.innerHTML = \"STOP\"\r\n        stopButton.onclick = () => {\r\n            if (this.stoped && this.listennerMode) {\r\n                stopButton.classList.remove(\"disabled\")\r\n                stopButton.innerHTML = \"STOP\"\r\n                this.stoped = false;\r\n            } else {\r\n                stopButton.classList.add(\"disabled\")\r\n                stopButton.innerHTML = \"RESTART\"\r\n                this.stoped = true;\r\n            }\r\n           \r\n            if(rec) {\r\n                console.log(\"STOP RECORDER\", rec);\r\n                rec.stop();\r\n\r\n                var irAlEditor = createElement(\"button\");\r\n                irAlEditor.innerHTML = \"Ir al editor\";\r\n                irAlEditor.onclick = () => {\r\n                    location.href = `/editor/${roomKey}`;\r\n                }\r\n                this.control.append(irAlEditor);\r\n            }\r\n        }\r\n        this.control.append(stopButton)\r\n\r\n        \r\n\r\n\r\n        div.append(this.control)\r\n\r\n        this.transmissionContainner = createDiv(\"transcripciones\", {width: 400, maxHeight: 200,  margin: \"auto auto\", color: \"#ffffff\", fontSize: 20, \r\n        display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"})\r\n        this.transmissionContainner.style.scrollBehavior = \"smooth\";\r\n        div.append(this.transmissionContainner)\r\n\r\n        document.body.append(div)\r\n    }\r\n\r\n    set title(value: string) {\r\n        this.__title = value;\r\n        this.elements.title.innerHTML = value;\r\n    }\r\n    set timeElapsed(value: number) {\r\n        this.elements.timeCounter.innerHTML = (value / 1000 | 0).toString();\r\n    }\r\n\r\n    private render() {\r\n        if (this.listennerMode == true && this.stoped) return;\r\n        while(this.queue.length) {\r\n        \r\n            var mensaje = this.queue.splice(0, 1)[0];\r\n            console.log(mensaje, this.queue)\r\n            if (!this.mensajes[mensaje.id]) {\r\n                var div = createDiv(\"textRow\",{ marginRight: \"4pt\"});\r\n                this.transmissionContainner.append(div);\r\n                this.mensajes[mensaje.id] = div;\r\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\r\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\r\n            } else {\r\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\r\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\r\n            }\r\n        }\r\n     \r\n    }\r\n    append(data: {result: string, id: string}) {\r\n        if (data) {\r\n            this.queue.push(data)   \r\n            this.render();  \r\n        } else {\r\n            console.error(\"Append null\")\r\n        }\r\n\r\n    }\r\n    stop() {\r\n        this.stoped = true;\r\n    }\r\n    resume() {\r\n        this.stoped = false;\r\n        this.render();\r\n    }\r\n}\r\n"]}