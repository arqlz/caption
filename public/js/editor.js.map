{"version":3,"sources":["public/src/editor.ts","public/src/components/utils.ts","public/src/components/texteditor.ts","public/src/utils/document.ts","public/src/utils/loadDocument.ts"],"names":["raw","samples","blockSize","Math","floor","length","filtered","i","start","sum","j","abs","push","multiplier","pow","max","normalized","map","n","audioBuffer","getChannelData","generarSamplesFromArray","buffer","context","AudioContext","decodeAudioData","then","canvas","normalizedData","dpr","window","devicePixelRatio","padding","width","offsetWidth","height","offsetHeight","ctx","getContext","clearRect","scale","translate","fillStyle","x","h","fillRect","console","log","sessions","blob","doc","loadDocument_1","div","utils_1","margin","visualization","document","createElement","classList","add","style","append","photo","background","img","photoUrl","src","onclick","input","type","accept","onchange","e","image_file","target","files","form","FormData","fetch","roomId","method","body","r","json","res","result","save","error","click","audioControls","marginTop","playPauseButton","innerText","downloadAudioButton","marginLeft","decodeAudio","arrayBuffer","generarSamples","drawHorizontal","editor","texteditor_1","source","onmousemove","strokeStyle","lineWidth","moveTo","offsetX","lineTo","stroke","progress","segundos","duration","after_this","near","clearMark","mark","id","toString","offset","stop","createBufferSource","connect","destination","playAudio","a","appendChild","display","url","URL","createObjectURL","href","download","revokeObjectURL","removeChild","build","pixelFields","Object","keys","forEach","k","is_number","indexOf","styleOrClass","__style","__className","className","applyStyle","msg","clases","contentEditable","innerHTML","constructor","itemes","Map","changed","onChange","get","onSave","containner","spanMsg","size","span","addEventListener","set","el","children","remove","mensajes","TextEditor","roomIdOrDocument","second","candidates","filter","f","clean","times","m","values","find","headers","JSON","stringify","room_id","Promise","resolve","reject","catch","err","jdoc","document_1","text","split","trim","parse","Error"],"mappings":"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","file":"","sourcesContent":["import { generarTextEditor } from \"./components/texteditor\";\r\nimport { createDiv, createElement } from \"./components/utils\";\r\nimport { loadData } from \"./utils/loadDocument\";\r\ndeclare const sessions;\r\n\r\nfunction generarSamplesFromArray(raw: Float32Array, samples = 400) {\r\n    const blockSize = Math.floor(raw.length/samples);\r\n    const filtered = [];\r\n    for (let i = 0; i < samples; i++) {\r\n        let start = blockSize * i;\r\n        let sum = 0;\r\n        for (let j = 0; j < blockSize; j++) {\r\n            sum += Math.abs(raw[start+j])\r\n        }\r\n        filtered.push(sum/blockSize)\r\n    }\r\n    const multiplier = Math.pow(Math.max(...filtered), -1);\r\n    const normalized = filtered.map(n => {\r\n        return n * multiplier\r\n    })\r\n    return normalized\r\n}\r\nfunction generarSamples(audioBuffer: AudioBuffer, samples = 400) {\r\n    const raw = audioBuffer.getChannelData(0);\r\n    return generarSamplesFromArray(raw, samples)\r\n}\r\nfunction decodeAudio(buffer) {\r\n    var context = new AudioContext();\r\n    return context.decodeAudioData(buffer)\r\n    .then(audioBuffer => {\r\n        return audioBuffer\r\n    })\r\n}\r\n\r\n\r\nfunction drawHorizontal(canvas: HTMLCanvasElement, normalizedData: number[]) {\r\n    const dpr = window.devicePixelRatio || 1;    \r\n    const padding = 10;\r\n    canvas.width = canvas.offsetWidth * dpr;\r\n    canvas.height = (canvas.offsetHeight + padding * 2 ) * dpr;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0,0,canvas.width, canvas.height)\r\n    ctx.scale(dpr, dpr);\r\n    ctx.translate( 0, canvas.offsetHeight / 2 + padding); \r\n\r\n\r\n    const width = canvas.offsetWidth / normalizedData.length;\r\n    ctx.fillStyle = \"#e7534b\";\r\n    for (let i = 0; i < normalizedData.length; i++) {\r\n        let x = width * i;\r\n        let h = normalizedData[i] * canvas.offsetHeight - padding\r\n        if (h<3) h = 1;\r\n        if (i%2 == 0 && h > 1) h = -h;\r\n\r\n        ctx.fillRect(x,0,width,h)\r\n\r\n    }\r\n}\r\n\r\nasync function build() { \r\n\r\n    console.log(sessions)\r\n    var [blob, doc] = await loadData(sessions);\r\n    if (!blob) return;\r\n\r\n\r\n    var div = createDiv({width: 500, margin: \"0 auto\"})  \r\n    const visualization = createDiv(\"row\")\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.classList.add(\"flex\")\r\n    canvas.style.width = \"100%\";\r\n    canvas.style.height = \"100px\";\r\n    visualization.append(canvas);\r\n    div.append(visualization)\r\n\r\n    const photo = createDiv({height: 150, width: \"100%\", background: \"#00000022\", margin: \"30px auto\"})\r\n    \r\n    let img = createElement(\"img\", {width: \"100%\"}) as HTMLImageElement;\r\n    console.log(doc.photoUrl)\r\n    if (doc.photoUrl) img.src = doc.photoUrl;\r\n    photo.append(img)\r\n    \r\n    photo.onclick = () => {\r\n        let input = createElement(\"input\") as HTMLInputElement;\r\n        input.type = \"file\";\r\n        input.accept = \"image/jpeg\"\r\n        input.onchange = (e: any) => {\r\n            let image_file = e.target.files[0];\r\n            var form = new FormData();\r\n            form.append(\"file\", image_file);\r\n            fetch(`/api/images/${doc.roomId}`, {method: \"POST\", body: form})\r\n            .then(r => r.json()).then(res => {\r\n                doc.photoUrl = res.result;\r\n                img.src = doc.photoUrl;\r\n                doc.save().then(console.log, console.error)\r\n               \r\n                \r\n            }, console.error)\r\n        }\r\n        input.click()\r\n    }\r\n    div.append(photo)\r\n\r\n    const audioControls = createDiv(\"row center\", {marginTop: 10}); \r\n    const playPauseButton = createElement(\"button\", {width: 100, height: 50});\r\n    playPauseButton.innerText = \"Play\";\r\n    audioControls.append(playPauseButton);\r\n    const downloadAudioButton = createElement(\"button\", {width: 140, height: 50, marginLeft: 10});\r\n    downloadAudioButton.innerText = \"Download\";\r\n    audioControls.append(downloadAudioButton);\r\n\r\n\r\n    div.append(audioControls)\r\n    document.body.append(div);\r\n\r\n    \r\n    const audioBuffer = await decodeAudio(await blob.arrayBuffer());\r\n    const normalized = generarSamples(audioBuffer);\r\n    drawHorizontal(canvas, normalized)  \r\n\r\n\r\n    let editor = generarTextEditor(doc, document.body);\r\n    var context = new AudioContext();\r\n    var source: AudioBufferSourceNode\r\n\r\n    canvas.onmousemove = e => {\r\n        drawHorizontal(canvas, normalized)  \r\n        var ctx = canvas.getContext(\"2d\");\r\n        ctx.strokeStyle = \"#e7534b\";\r\n        ctx.lineWidth = 3;\r\n        ctx.moveTo(e.offsetX, -canvas.height/2)\r\n        ctx.lineTo(e.offsetX, canvas.height/2)\r\n        ctx.stroke()\r\n\r\n\r\n        let progress = e.offsetX/canvas.width;\r\n        let segundos = audioBuffer.duration * progress ;\r\n\r\n\r\n        var after_this = doc.near(segundos)\r\n        if (after_this.length) {\r\n            editor.clearMark().mark(after_this[0].id.toString())\r\n        } \r\n    }   \r\n\r\n    function playAudio(offset: number) {\r\n        if (source) source.stop()\r\n        playPauseButton.innerText = \"Stop\"\r\n        source = context.createBufferSource()\r\n        source.buffer = audioBuffer;\r\n        source.connect(context.destination)\r\n        source.start(0, offset)\r\n    }\r\n    canvas.onclick = (e) => {\r\n        let progress = e.offsetX/canvas.width;\r\n        let segundos = audioBuffer.duration * progress ;\r\n        \r\n        var target = doc.near(segundos)\r\n        if (target.length) playAudio( target[0].id / 10000000)\r\n    }\r\n    playPauseButton.onclick = () => {\r\n        if (source) {\r\n            source.stop()\r\n            source = null;\r\n            playPauseButton.innerText = \"Play\"\r\n        } else playAudio(0)\r\n    }\r\n    downloadAudioButton.onclick = () => {\r\n        var a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style.display = \"none\";\r\n        let url = window.URL.createObjectURL(blob)\r\n        a.href = url;\r\n        a.download = doc.roomId+\".webm\";\r\n        a.click()\r\n        window.URL.revokeObjectURL(url)\r\n        document.body.removeChild(a)\r\n    }\r\n\r\n}\r\n\r\nbuild()\r\n\r\n","const pixelFields = [\"margin\", \"marginLeft\", \"marginRight\", \"marginTop\",\"marginBottom\", \r\n    \"padding\", \"paddingLeft\", \"paddingRight\", \"paddingTop\",\"paddingBottom\",\r\n    \"left\", \"top\", \"right\", \"bottom\",\"width\",\"height\", \"minWidth\", \"minHeight\", \r\n    \"maxWidth\", \"maxHeight\", \"borderWidth\"]\r\nexport function applyStyle(div: HTMLElement, style: any) {\r\n    Object.keys(style || {}).forEach(k => {\r\n        let is_number = pixelFields.indexOf(k) >= 0\r\n        if (is_number && typeof style[k] == \"number\") div.style[k] = style[k]+\"px\"\r\n        else div.style[k] = style[k]\r\n   \r\n    })\r\n}\r\n\r\n\r\ninterface  ICreateElement {\r\n    (type: \"button\", styleOrClass?: string | object, style?: object): HTMLButtonElement;\r\n    (type: \"div\", styleOrClass?: string | object, style?: object): HTMLDivElement;\r\n    (type: string, styleOrClass?: string | object, style?: object): HTMLElement;\r\n}\r\nexport const createElement: ICreateElement = (type: string, styleOrClass?: string | object, style?: object) => {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(type)\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div as any\r\n} \r\n\r\nexport function createDiv(styleOrClass?: string | object, style?: object) {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(\"div\")\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div\r\n}\r\n","import { IMsg, TranscriptionDocument } from \"../utils/document\";\r\nimport { createDiv } from \"./utils\";\r\n\r\n\r\nfunction span(msg: IMsg, clases = null) {\r\n    var div = createDiv(\"span\");\r\n    if (clases) div.classList.add(clases)\r\n    div.contentEditable = \"true\";\r\n    div.innerHTML = msg.result\r\n    return div\r\n}\r\n\r\nclass TextEditor {\r\n    containner: HTMLElement;\r\n    itemes: Map<string, {div: HTMLElement, msg: IMsg}> = new Map();\r\n    doc: TranscriptionDocument;\r\n    changed = false;\r\n\r\n\r\n    constructor(doc: TranscriptionDocument, div: HTMLElement) {\r\n        this.containner = div;   \r\n        this.doc = doc;  \r\n    }\r\n    append(msg: IMsg) {\r\n        let spanMsg: HTMLElement;\r\n        if (this.itemes.size == 0) spanMsg = span(msg, \"title\")\r\n        else spanMsg = span(msg)\r\n        spanMsg.addEventListener(\"input\", this.onChange)\r\n        spanMsg.addEventListener(\"blur\", this.onSave)\r\n        let id = msg.id.toString();\r\n        spanMsg.id = id;  \r\n        this.itemes.set(id, {div: spanMsg, msg})\r\n        this.containner.append(spanMsg)  \r\n    }\r\n    clearMark() {\r\n        for (let el of this.containner.children) el.classList.remove(\"selected\")\r\n        return this\r\n    }\r\n    mark(id: string) {\r\n        this.itemes.get(id).div.classList.add(\"selected\")\r\n        return this\r\n    }\r\n    onChange = (e) => {\r\n        this.doc.get(e.target.id).result = e.target.innerText;\r\n        this.changed = true;\r\n    }\r\n    onSave = (e) => {\r\n        if (this.changed) {\r\n            this.doc.save().then(console.log, console.error)\r\n            this.changed = false\r\n        }\r\n    }\r\n}\r\n\r\nexport function generarTextEditor(doc: TranscriptionDocument, containner: HTMLElement) {\r\n    var mensajes: IMsg[] = [];\r\n\r\n    for (let msg of doc.itemes) {\r\n        if (mensajes.length && mensajes[mensajes.length-1].id == msg.id) {\r\n            mensajes[mensajes.length-1] = msg;\r\n        } else {\r\n            mensajes.push(msg)\r\n        }\r\n    }\r\n\r\n    var div = createDiv(\"textEditor\");\r\n    //div.contentEditable = \"true\";\r\n    var editor = new TextEditor(doc, div)\r\n\r\n    for (let i = 0; i < mensajes.length; i++) {\r\n        let msg = mensajes[i]\r\n        editor.append(msg)\r\n    }\r\n\r\n    containner.append(div)\r\n    return editor;\r\n}","export interface IMsg {\r\n    result: string,\r\n    id: number, \r\n    speakerId: string\r\n}\r\n\r\n\r\nexport class TranscriptionDocument {\r\n    roomId: string = \"\";\r\n    itemes: IMsg[] = [];\r\n    photoUrl: string = \"\";\r\n    constructor(roomIdOrDocument: string | TranscriptionDocument, itemes: IMsg[] = []) {\r\n        if (typeof roomIdOrDocument == \"string\") {\r\n            this.roomId = roomIdOrDocument;\r\n            this.itemes = itemes;\r\n        } else {\r\n            this.roomId = roomIdOrDocument.roomId;\r\n            this.itemes = roomIdOrDocument.itemes || itemes;\r\n            this.photoUrl = roomIdOrDocument.photoUrl;\r\n        }\r\n\r\n    }\r\n    near(second: number) {\r\n        let candidates = this.itemes.filter(f => {\r\n            return f.id > second*10000000;\r\n        })\r\n        if (candidates.length) return candidates;\r\n        else if (this.itemes.length) return [this.itemes[this.itemes.length-1]]\r\n        return []\r\n    }\r\n    clean() {\r\n        var times = {}\r\n        for (let m of this.itemes) {\r\n            times[m.id] = m\r\n        }\r\n        this.itemes = Object.values(times)\r\n    }\r\n    get(id: string) {\r\n        return this.itemes.find(f => f.id.toString() == id)\r\n    }\r\n    save() {\r\n        return fetch(`/api/transcripcion/${this.roomId}`, {method: \"POST\", headers: {\"Content-Type\": \"application/json\"}, body: JSON.stringify(this)}).then(r => r.json())\r\n    }\r\n}\r\n","import { TranscriptionDocument } from \"./document\"\r\n\r\nexport function loadData(room_id: string): Promise<[Blob, TranscriptionDocument]>{\r\n    return new Promise<[Blob, TranscriptionDocument]>(async (resolve, reject) => {\r\n        try {\r\n            //const blob = await fetch(`/data/${room_id}.webm`).then(r => r.blob()).catch(err => {\r\n             //   throw new Error(\"Error al descargar el archivo de audio: \"+err)\r\n            //})\r\n            const blob = await fetch(`/audio/${room_id}`).then(r => r.blob()).catch(err => null)\r\n            if (!blob) return;\r\n\r\n\r\n            fetch(`/api/transcripcion/${room_id}`).then(r => r.json()).then( (jdoc: {result: TranscriptionDocument}) => {\r\n                var doc = new TranscriptionDocument(jdoc.result)\r\n                resolve( [blob, doc] )\r\n            }).catch(err => {\r\n\r\n                return fetch(`/transcripcion/${room_id}`).then(r => r.text()).then(text => {\r\n                    var json = text.split(\"\\n\").filter(f => f.trim().length).map(j => JSON.parse(j))\r\n                    var doc = new TranscriptionDocument(room_id, json)\r\n                    doc.clean()\r\n                    resolve( [blob, doc] )\r\n                }).catch(err => {\r\n                    throw new Error(\"El archivo jsonl no fue encontrado: \"+err)\r\n                })\r\n            })            \r\n\r\n        } catch(err) {\r\n            reject(err)\r\n        }\r\n    })\r\n}"]}