{"version":3,"sources":["public/src/components/utils.ts","public/src/components/texteditor.ts","public/src/utils/document.ts","public/src/utils/loadDocument.ts","public/src/editor.ts"],"names":["pixelFields","div","style","Object","keys","forEach","k","is_number","indexOf","type","styleOrClass","__style","__className","document","createElement","className","applyStyle","msg","clases","utils_1","classList","add","contentEditable","innerHTML","result","constructor","doc","itemes","Map","changed","onChange","e","get","target","id","innerText","onSave","save","then","console","log","error","containner","append","spanMsg","size","span","addEventListener","toString","set","clearMark","el","children","remove","mark","mensajes","length","push","editor","TextEditor","i","roomIdOrDocument","roomId","photoUrl","near","second","candidates","filter","f","clean","times","m","values","find","fetch","method","headers","body","JSON","stringify","r","json","room_id","Promise","resolve","reject","blob","catch","err","jdoc","document_1","text","split","trim","map","j","parse","Error","raw","samples","blockSize","Math","floor","filtered","start","sum","abs","multiplier","pow","max","normalized","n","audioBuffer","getChannelData","generarSamplesFromArray","buffer","context","AudioContext","decodeAudioData","canvas","normalizedData","dpr","window","devicePixelRatio","padding","width","offsetWidth","height","offsetHeight","ctx","getContext","clearRect","scale","translate","fillStyle","x","h","fillRect","loadDocument_1","sessions","margin","visualization","photo","background","img","src","onclick","input","accept","onchange","image_file","files","form","FormData","res","click","audioControls","marginTop","playPauseButton","downloadAudioButton","marginLeft","decodeAudio","arrayBuffer","generarSamples","drawHorizontal","texteditor_1","source","onmousemove","strokeStyle","lineWidth","moveTo","offsetX","lineTo","stroke","progress","segundos","duration","after_this","offset","stop","createBufferSource","connect","destination","playAudio","a","appendChild","display","url","URL","createObjectURL","href","download","revokeObjectURL","removeChild","build"],"mappings":"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","file":"","sourcesContent":["const pixelFields = [\"margin\", \"marginLeft\", \"marginRight\", \"marginTop\",\"marginBottom\", \r\n    \"padding\", \"paddingLeft\", \"paddingRight\", \"paddingTop\",\"paddingBottom\",\r\n    \"left\", \"top\", \"right\", \"bottom\",\"width\",\"height\", \"minWidth\", \"minHeight\", \r\n    \"maxWidth\", \"maxHeight\", \"borderWidth\"]\r\nexport function applyStyle(div: HTMLElement, style: any) {\r\n    Object.keys(style || {}).forEach(k => {\r\n        let is_number = pixelFields.indexOf(k) >= 0\r\n        if (is_number && typeof style[k] == \"number\") div.style[k] = style[k]+\"px\"\r\n        else div.style[k] = style[k]\r\n   \r\n    })\r\n}\r\n\r\n\r\ninterface  ICreateElement {\r\n    (type: \"button\", styleOrClass?: string | object, style?: object): HTMLButtonElement;\r\n    (type: \"div\", styleOrClass?: string | object, style?: object): HTMLDivElement;\r\n    (type: string, styleOrClass?: string | object, style?: object): HTMLElement;\r\n}\r\nexport const createElement: ICreateElement = (type: string, styleOrClass?: string | object, style?: object) => {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(type)\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div as any\r\n} \r\n\r\nexport function createDiv(styleOrClass?: string | object, style?: object) {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(\"div\")\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div\r\n}\r\n","import { IMsg, TranscriptionDocument } from \"../utils/document\";\r\nimport { createDiv } from \"./utils\";\r\n\r\n\r\nfunction span(msg: IMsg, clases = null) {\r\n    var div = createDiv(\"span\");\r\n    if (clases) div.classList.add(clases)\r\n    div.contentEditable = \"true\";\r\n    div.innerHTML = msg.result\r\n    return div\r\n}\r\n\r\nclass TextEditor {\r\n    containner: HTMLElement;\r\n    itemes: Map<string, {div: HTMLElement, msg: IMsg}> = new Map();\r\n    doc: TranscriptionDocument;\r\n    changed = false;\r\n\r\n\r\n    constructor(doc: TranscriptionDocument, div: HTMLElement) {\r\n        this.containner = div;   \r\n        this.doc = doc;  \r\n    }\r\n    append(msg: IMsg) {\r\n        let spanMsg: HTMLElement;\r\n        if (this.itemes.size == 0) spanMsg = span(msg, \"title\")\r\n        else spanMsg = span(msg)\r\n        spanMsg.addEventListener(\"input\", this.onChange)\r\n        spanMsg.addEventListener(\"blur\", this.onSave)\r\n        let id = msg.id.toString();\r\n        spanMsg.id = id;  \r\n        this.itemes.set(id, {div: spanMsg, msg})\r\n        this.containner.append(spanMsg)  \r\n    }\r\n    clearMark() {\r\n        for (let el of this.containner.children) el.classList.remove(\"selected\")\r\n        return this\r\n    }\r\n    mark(id: string) {\r\n        this.itemes.get(id).div.classList.add(\"selected\")\r\n        return this\r\n    }\r\n    onChange = (e) => {\r\n        this.doc.get(e.target.id).result = e.target.innerText;\r\n        this.changed = true;\r\n    }\r\n    onSave = (e) => {\r\n        if (this.changed) {\r\n            this.doc.save().then(console.log, console.error)\r\n            this.changed = false\r\n        }\r\n    }\r\n}\r\n\r\nexport function generarTextEditor(doc: TranscriptionDocument, containner: HTMLElement) {\r\n    var mensajes: IMsg[] = [];\r\n\r\n    for (let msg of doc.itemes) {\r\n        if (mensajes.length && mensajes[mensajes.length-1].id == msg.id) {\r\n            mensajes[mensajes.length-1] = msg;\r\n        } else {\r\n            mensajes.push(msg)\r\n        }\r\n    }\r\n\r\n    var div = createDiv(\"textEditor\");\r\n    //div.contentEditable = \"true\";\r\n    var editor = new TextEditor(doc, div)\r\n\r\n    for (let i = 0; i < mensajes.length; i++) {\r\n        let msg = mensajes[i]\r\n        editor.append(msg)\r\n    }\r\n\r\n    containner.append(div)\r\n    return editor;\r\n}","export interface IMsg {\r\n    result: string,\r\n    id: number, \r\n    speakerId: string\r\n}\r\n\r\n\r\nexport class TranscriptionDocument {\r\n    roomId: string = \"\";\r\n    itemes: IMsg[] = [];\r\n    photoUrl: string = \"\";\r\n    constructor(roomIdOrDocument: string | TranscriptionDocument, itemes: IMsg[] = []) {\r\n        if (typeof roomIdOrDocument == \"string\") {\r\n            this.roomId = roomIdOrDocument;\r\n            this.itemes = itemes;\r\n        } else {\r\n            this.roomId = roomIdOrDocument.roomId;\r\n            this.itemes = roomIdOrDocument.itemes || itemes;\r\n            this.photoUrl = roomIdOrDocument.photoUrl;\r\n        }\r\n\r\n    }\r\n    near(second: number) {\r\n        let candidates = this.itemes.filter(f => {\r\n            return f.id > second*10000000;\r\n        })\r\n        if (candidates.length) return candidates;\r\n        else if (this.itemes.length) return [this.itemes[this.itemes.length-1]]\r\n        return []\r\n    }\r\n    clean() {\r\n        var times = {}\r\n        for (let m of this.itemes) {\r\n            times[m.id] = m\r\n        }\r\n        this.itemes = Object.values(times)\r\n    }\r\n    get(id: string) {\r\n        return this.itemes.find(f => f.id.toString() == id)\r\n    }\r\n    save() {\r\n        return fetch(`/api/transcripcion/${this.roomId}`, {method: \"POST\", headers: {\"Content-Type\": \"application/json\"}, body: JSON.stringify(this)}).then(r => r.json())\r\n    }\r\n}\r\n","import { TranscriptionDocument } from \"./document\"\r\n\r\nexport function loadData(room_id: string): Promise<[Blob, TranscriptionDocument]>{\r\n    return new Promise<[Blob, TranscriptionDocument]>(async (resolve, reject) => {\r\n        try {\r\n            //const blob = await fetch(`/data/${room_id}.webm`).then(r => r.blob()).catch(err => {\r\n             //   throw new Error(\"Error al descargar el archivo de audio: \"+err)\r\n            //})\r\n            const blob = await fetch(`/audio/${room_id}`).then(r => r.blob()).catch(err => null)\r\n            if (!blob) return;\r\n\r\n\r\n            fetch(`/api/transcripcion/${room_id}`).then(r => r.json()).then( (jdoc: {result: TranscriptionDocument}) => {\r\n                var doc = new TranscriptionDocument(jdoc.result)\r\n                resolve( [blob, doc] )\r\n            }).catch(err => {\r\n\r\n                return fetch(`/transcripcion/${room_id}`).then(r => r.text()).then(text => {\r\n                    var json = text.split(\"\\n\").filter(f => f.trim().length).map(j => JSON.parse(j))\r\n                    var doc = new TranscriptionDocument(room_id, json)\r\n                    doc.clean()\r\n                    resolve( [blob, doc] )\r\n                }).catch(err => {\r\n                    throw new Error(\"El archivo jsonl no fue encontrado: \"+err)\r\n                })\r\n            })            \r\n\r\n        } catch(err) {\r\n            reject(err)\r\n        }\r\n    })\r\n}","import { generarTextEditor } from \"./components/texteditor\";\r\nimport { createDiv, createElement } from \"./components/utils\";\r\nimport { loadData } from \"./utils/loadDocument\";\r\ndeclare const sessions;\r\n\r\nfunction generarSamplesFromArray(raw: Float32Array, samples = 400) {\r\n    const blockSize = Math.floor(raw.length/samples);\r\n    const filtered = [];\r\n    for (let i = 0; i < samples; i++) {\r\n        let start = blockSize * i;\r\n        let sum = 0;\r\n        for (let j = 0; j < blockSize; j++) {\r\n            sum += Math.abs(raw[start+j])\r\n        }\r\n        filtered.push(sum/blockSize)\r\n    }\r\n    const multiplier = Math.pow(Math.max(...filtered), -1);\r\n    const normalized = filtered.map(n => {\r\n        return n * multiplier\r\n    })\r\n    return normalized\r\n}\r\nfunction generarSamples(audioBuffer: AudioBuffer, samples = 400) {\r\n    const raw = audioBuffer.getChannelData(0);\r\n    return generarSamplesFromArray(raw, samples)\r\n}\r\nfunction decodeAudio(buffer) {\r\n    var context = new AudioContext();\r\n    return context.decodeAudioData(buffer)\r\n    .then(audioBuffer => {\r\n        return audioBuffer\r\n    })\r\n}\r\n\r\nfunction drawHorizontal(canvas: HTMLCanvasElement, normalizedData: number[]) {\r\n    const dpr = window.devicePixelRatio || 1;    \r\n    const padding = 10;\r\n    canvas.width = canvas.offsetWidth * dpr;\r\n    canvas.height = (canvas.offsetHeight + padding * 2 ) * dpr;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0,0,canvas.width, canvas.height)\r\n    ctx.scale(dpr, dpr);\r\n    ctx.translate( 0, canvas.offsetHeight / 2 + padding); \r\n\r\n\r\n    const width = canvas.offsetWidth / normalizedData.length;\r\n    ctx.fillStyle = \"#e7534b\";\r\n    for (let i = 0; i < normalizedData.length; i++) {\r\n        let x = width * i;\r\n        let h = normalizedData[i] * canvas.offsetHeight - padding\r\n        if (h<3) h = 1;\r\n        if (i%2 == 0 && h > 1) h = -h;\r\n\r\n        ctx.fillRect(x,0,width,h)\r\n\r\n    }\r\n}\r\n\r\nasync function build() { \r\n\r\n    var [blob, doc] = await loadData(sessions);\r\n    if (!blob) return;\r\n\r\n\r\n    var div = createDiv({width: 500, margin: \"0 auto\"})  \r\n    const visualization = createDiv(\"row\")\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.classList.add(\"flex\")\r\n    canvas.style.width = \"100%\";\r\n    canvas.style.height = \"100px\";\r\n    visualization.append(canvas);\r\n    div.append(visualization)\r\n\r\n    const photo = createDiv({height: 150, width: \"100%\", background: \"#00000022\", margin: \"30px auto\"})\r\n    \r\n    let img = createElement(\"img\", {width: \"100%\"}) as HTMLImageElement;\r\n    if (doc.photoUrl) img.src = doc.photoUrl;\r\n    photo.append(img)\r\n    \r\n    photo.onclick = () => {\r\n        let input = createElement(\"input\") as HTMLInputElement;\r\n        input.type = \"file\";\r\n        input.accept = \"image/jpeg\"\r\n        input.onchange = (e: any) => {\r\n            let image_file = e.target.files[0];\r\n            var form = new FormData();\r\n            form.append(\"file\", image_file);\r\n            fetch(`/api/images/${doc.roomId}`, {method: \"POST\", body: form})\r\n            .then(r => r.json()).then(res => {\r\n                doc.photoUrl = res.result;\r\n                img.src = doc.photoUrl;\r\n                doc.save().then(console.log, console.error)\r\n               \r\n                \r\n            }, console.error)\r\n        }\r\n        input.click()\r\n    }\r\n    div.append(photo)\r\n\r\n    const audioControls = createDiv(\"row center\", {marginTop: 10}); \r\n    const playPauseButton = createElement(\"button\", {width: 100, height: 50});\r\n    playPauseButton.innerText = \"Play\";\r\n    audioControls.append(playPauseButton);\r\n    const downloadAudioButton = createElement(\"button\", {width: 140, height: 50, marginLeft: 10});\r\n    downloadAudioButton.innerText = \"Download\";\r\n    audioControls.append(downloadAudioButton);\r\n\r\n\r\n    div.append(audioControls)\r\n    document.body.append(div);\r\n\r\n    \r\n    const audioBuffer = await decodeAudio(await blob.arrayBuffer());\r\n    const normalized = generarSamples(audioBuffer);\r\n    drawHorizontal(canvas, normalized)  \r\n\r\n\r\n    let editor = generarTextEditor(doc, document.body);\r\n    var context = new AudioContext();\r\n    var source: AudioBufferSourceNode\r\n\r\n    canvas.onmousemove = e => {\r\n        drawHorizontal(canvas, normalized)  \r\n        var ctx = canvas.getContext(\"2d\");\r\n        ctx.strokeStyle = \"#e7534b\";\r\n        ctx.lineWidth = 3;\r\n        ctx.moveTo(e.offsetX, -canvas.height/2)\r\n        ctx.lineTo(e.offsetX, canvas.height/2)\r\n        ctx.stroke()\r\n\r\n\r\n        let progress = e.offsetX/canvas.width;\r\n        let segundos = audioBuffer.duration * progress ;\r\n\r\n\r\n        var after_this = doc.near(segundos)\r\n        if (after_this.length) {\r\n            editor.clearMark().mark(after_this[0].id.toString())\r\n        } \r\n    }   \r\n\r\n    function playAudio(offset: number) {\r\n        if (source) source.stop()\r\n        playPauseButton.innerText = \"Stop\"\r\n        source = context.createBufferSource()\r\n        source.buffer = audioBuffer;\r\n        source.connect(context.destination)\r\n        source.start(0, offset)\r\n    }\r\n    canvas.onclick = (e) => {\r\n        let progress = e.offsetX/canvas.width;\r\n        let segundos = audioBuffer.duration * progress ;\r\n        \r\n        var target = doc.near(segundos)\r\n        if (target.length) playAudio( target[0].id / 10000000)\r\n    }\r\n    playPauseButton.onclick = () => {\r\n        if (source) {\r\n            source.stop()\r\n            source = null;\r\n            playPauseButton.innerText = \"Play\"\r\n        } else playAudio(0)\r\n    }\r\n    downloadAudioButton.onclick = () => {\r\n        var a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style.display = \"none\";\r\n        let url = window.URL.createObjectURL(blob)\r\n        a.href = url;\r\n        a.download = doc.roomId+\".webm\";\r\n        a.click()\r\n        window.URL.revokeObjectURL(url)\r\n        document.body.removeChild(a)\r\n    }\r\n\r\n}\r\n\r\nbuild()\r\n\r\n"]}