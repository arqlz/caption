{"version":3,"sources":["public/src/components/utils.ts","public/src/presenter.ts","public/src/receptorClient.ts"],"names":["pixelFields","div","style","Object","keys","forEach","k","is_number","indexOf","type","styleOrClass","__style","__className","document","createElement","className","applyStyle","constructor","rec","lines","queue","utils_1","width","height","control","stopButton","innerHTML","onclick","disabled","console","log","stop","append","show","textAlign","margin","color","fontSize","textContainner","body","setInterval","appendWord","length","w","splice","id","result","data","push","presenter","presenter_1","socket","io","on","roomId","location","pathname","Error","split","slice","emit","connect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAMA,eAAe,UAAU,cAAc,eAAe,aAAY,gBACpE,WAAW,eAAe,gBAAgB,cAAa,iBACvD,QAAQ,OAAO,SAAS,UAAS,SAAQ,UAAU,YAAY,aAC/D,YAAY,aAAa;AACtB,oBAAoBC,KAAkBC;EACzCC,OAAOC,KAAKF,eAAaG,QAAQC,AAAA;QACzBC,YAAYP,YAAYQ,QAAQF,MAAM;QACtCC,oBAAoBL,MAAMI,MAAM,UAAUL,IAAIC,MAAMI,KAAKJ,MAAMI,KAAG,WACjEL,IAAIC,MAAMI,KAAKJ,MAAMI;;;;wBAWW,CAACG,MAAcC,cAAgCR;MACpFS,iBAAiBD,gBAAgB,WAAUA,eAAeR;MAC1DU,qBAAqBF,gBAAgB,WAAUA,eAAe;MAC9DT,MAAMY,SAASC,cAAcL;EACjCR,IAAIc,YAAYH;EAChBI,WAAWf,KAAKU;SACTV;;AAGJ,mBAAmBS,cAAgCR;MAClDS,iBAAiBD,gBAAgB,WAAUA,eAAeR;MAC1DU,qBAAqBF,gBAAgB,WAAUA,eAAe;MAC9DT,MAAMY,SAASC,cAAc;EACjCb,IAAIc,YAAYH;EAChBI,WAAWf,KAAKU;SACTV;;;;;;;;;;AChCJ;EAKHgB,YAAYC;SAFZC;SACAC;QAEQnB,MAAMoB;MAAWC,OAAO;MAAQC,QAAQ;;IAE5C,KAAKC,UAAUH;QACXI,aAAaJ,sBAAc;IAC/BI,WAAWC,YAAY;IACvBD,WAAWE,UAAU;MACjBF,WAAWG,WAAW;UACnBV;QACCW,QAAQC,IAAI,iBAAiBZ;QAC7BA,IAAIa;;;IAGZ,KAAKP,QAAQQ,OAAOP;IACpBxB,IAAI+B,OAAO,KAAKR;QAEZS,OAAOZ;MAAWC,OAAO;MAAKY,WAAW;MAAUC,QAAQ;MAAaC,OAAO;MAAWC,UAAU;;IACxG,KAAKC,iBAAiBL;IACtBhC,IAAI+B,OAAOC;IAEXpB,SAAS0B,KAAKP,OAAO/B;IACrBuC,YAAY;MACR,KAAKC;OACN;;EAEPA;QACQ,KAAKrB,MAAMsB;UACPC,IAAI,KAAKvB,MAAMwB,OAAO,GAAG,GAAG;WAC3B,KAAKzB,MAAMwB,EAAEE;YACV5C,MAAMoB;QACV,KAAKiB,eAAeN,OAAO/B;QAC3B,KAAKkB,MAAMwB,EAAEE,MAAM5C;;MAEvB,KAAKkB,MAAMwB,EAAEE,IAAInB,YAAYiB,EAAEG;;;EAGvCd,OAAOe;IACH,KAAK3B,MAAM4B,KAAKD;;;;;;;;;;;IC1CpBE,gBAAgBC;IAGhBC,SAASC;AAEbD,OAAOE,GAAG,SAAS;EACfxB,QAAQC,IAAI;MAERmB,gBAAgBC;EAEpBC,OAAOE,GAAG,WAAWN,AAAA;IACjBE,UAAUjB,OAAOe;;;AAGzBI,OAAOE,GAAG,cAAc;EACpBxB,QAAQC,IAAI;;AAEhBqB,OAAOE,GAAG,WAAW;EACjBxB,QAAQC,IAAI;;AAEhBqB,OAAOE,GAAG,SAAS;MACXC,SAASC,SAASC,YAAY;MAC9BF,OAAOZ,SAAS;cACNe,MAAM;;;EAGpBH,SAASA,OAAOI,MAAM,KAAKC,MAAM,GAAG;EACpCR,OAAOS,KAAK;IAASN,QAAQA;;;AAGjCH,OAAOE,GAAG,UAAW,AAACC;EAClBzB,QAAQC,IAAI;;AAGhBqB,OAAOU","file":"","sourcesContent":["const pixelFields = [\"margin\", \"marginLeft\", \"marginRight\", \"marginTop\",\"marginBottom\", \r\n    \"padding\", \"paddingLeft\", \"paddingRight\", \"paddingTop\",\"paddingBottom\",\r\n    \"left\", \"top\", \"right\", \"bottom\",\"width\",\"height\", \"minWidth\", \"minHeight\", \r\n    \"maxWidth\", \"maxHeight\", \"borderWidth\"]\r\nexport function applyStyle(div: HTMLElement, style: any) {\r\n    Object.keys(style || {}).forEach(k => {\r\n        let is_number = pixelFields.indexOf(k) >= 0\r\n        if (is_number && typeof style[k] == \"number\") div.style[k] = style[k]+\"px\"\r\n        else div.style[k] = style[k]\r\n   \r\n    })\r\n}\r\n\r\n\r\ninterface  ICreateElement {\r\n    (type: \"button\", styleOrClass?: string | object, style?: object): HTMLButtonElement;\r\n    (type: \"div\", styleOrClass?: string | object, style?: object): HTMLDivElement;\r\n    (type: string, styleOrClass?: string | object, style?: object): HTMLElement;\r\n}\r\nexport const createElement: ICreateElement = (type: string, styleOrClass?: string | object, style?: object) => {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(type)\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div as any\r\n} \r\n\r\nexport function createDiv(styleOrClass?: string | object, style?: object) {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(\"div\")\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div\r\n}\r\n","import { createDiv, createElement } from \"./components/utils\"\r\n\r\nexport class Presenter {\r\n    textContainner: HTMLDivElement;\r\n    control: HTMLDivElement;\r\n    lines: {[id: string]: HTMLDivElement} = {}\r\n    queue: {result: string, id: string}[] = []\r\n    constructor(rec?) {\r\n        var div = createDiv({width: \"100%\", height: \"100%\"})\r\n\r\n        this.control = createDiv()\r\n        var stopButton = createElement(\"button\")\r\n        stopButton.innerHTML = \"STOP\"\r\n        stopButton.onclick = () => {\r\n            stopButton.disabled = true\r\n            if(rec) {\r\n                console.log(\"STOP RECORDER\", rec)\r\n                rec.stop()\r\n            }\r\n        }\r\n        this.control.append(stopButton)\r\n        div.append(this.control)\r\n\r\n        var show = createDiv({width: 350, textAlign: \"center\", margin: \"auto auto\", color: \"#ffffff\", fontSize: 20})\r\n        this.textContainner = show\r\n        div.append(show)\r\n\r\n        document.body.append(div)\r\n        setInterval(() => {\r\n            this.appendWord()\r\n        }, 100)\r\n    }\r\n    appendWord() {    \r\n        if (this.queue.length) {\r\n            var w = this.queue.splice(0, 1)[0]\r\n            if (!this.lines[w.id]) {\r\n                var div = createDiv()\r\n                this.textContainner.append(div)\r\n                this.lines[w.id] = div;\r\n            }\r\n            this.lines[w.id].innerHTML = w.result\r\n        }\r\n    }\r\n    append(data: {result: string, id: string}) {\r\n        this.queue.push(data)\r\n   \r\n    }\r\n}\r\n","import { Presenter } from \"./presenter\";\r\ndeclare const io : typeof import(\"socket.io-client\").default\r\nvar presenter = new Presenter()\r\n\r\n\r\nvar socket = io()\r\n\r\nsocket.on(\"ready\", () => {\r\n    console.log(\"Starting recorder\")\r\n\r\n    var presenter = new Presenter()\r\n\r\n    socket.on(\"mensaje\", data => {\r\n        presenter.append(data)\r\n    })\r\n})\r\nsocket.on(\"disconnect\", () => {\r\n    console.log(\"disconected\")\r\n})\r\nsocket.on(\"connect\", () => {\r\n    console.log(\"connected\")\r\n})\r\nsocket.on(\"hello\", () => {\r\n    var roomId = location.pathname || \"\"\r\n    if (roomId.length < 2) {\r\n        throw new Error(\"sala invalida\")\r\n        return\r\n    }\r\n    roomId = roomId.split(\"/\").slice(2)[0];\r\n    socket.emit(\"join\", {roomId: roomId});  \r\n\r\n})\r\nsocket.on(\"joined\",  (roomId) => {\r\n    console.log(\"Joined to room\")\r\n});  \r\n\r\nsocket.connect()"]}