{"version":3,"sources":["public/src/receptorClient.ts","public/src/components/utils.ts","public/src/presenter.ts"],"names":["path","location","pathname","presenter","presenter_1","split","slice","socket","io","on","console","log","roomId","length","Error","info","title","eventTitle","emit","data","append","connect","pixelFields","div","style","Object","keys","forEach","k","is_number","indexOf","type","styleOrClass","__style","__className","document","createElement","className","applyStyle","constructor","rec","roomKey","mensajes","queue","raw","stoped","listennerMode","elements","__title","utils_1","width","height","id","header","margin","innerHTML","roomData","svg","paddingLeft","classList","add","src","onclick","documentElement","requestFullscreen","timeCounter","fontSize","fontWeight","control","stopButton","remove","stop","irAlEditor","href","transmissionContainner","maxHeight","color","display","flexDirection","overflow","scrollBehavior","body","value","timeElapsed","toString","render","mensaje","splice","marginRight","result","scrollTo","top","scrollHeight","push","error","resume"],"mappings":"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","file":"","sourcesContent":["import { Presenter } from \"./presenter\";\r\ndeclare const io : typeof import(\"socket.io-client\").default\r\n\r\n\r\nvar path = location.pathname || \"\";\r\nvar presenter = new Presenter( path.split(\"/\").slice(2)[0] )\r\n\r\n\r\nvar socket = io()\r\n\r\n\r\nsocket.on(\"disconnect\", () => {\r\n    console.log(\"disconected\")\r\n})\r\nsocket.on(\"connect\", () => {\r\n    var roomId = location.pathname || \"\"\r\n    if (roomId.length < 2) {\r\n        throw new Error(\"sala invalida\")\r\n    }\r\n\r\n    socket.on(\"info\", (info: {photoUrl: string, eventTitle: string}) => {\r\n        presenter.title = info.eventTitle;\r\n    })\r\n    roomId = roomId.split(\"/\").slice(2)[0];\r\n    socket.emit(\"join\", {roomId: roomId});  \r\n\r\n})\r\n\r\n\r\nsocket.on(\"joined\",  (roomId) => {\r\n    socket.on(\"mensaje\", data => {\r\n        presenter.append(data)\r\n    })  \r\n    console.log(\"Joined to room\")\r\n});  \r\n\r\nsocket.connect()","const pixelFields = [\"margin\", \"marginLeft\", \"marginRight\", \"marginTop\",\"marginBottom\", \r\n    \"padding\", \"paddingLeft\", \"paddingRight\", \"paddingTop\",\"paddingBottom\",\r\n    \"left\", \"top\", \"right\", \"bottom\",\"width\",\"height\", \"minWidth\", \"minHeight\", \r\n    \"maxWidth\", \"maxHeight\", \"borderWidth\"]\r\nexport function applyStyle(div: HTMLElement, style: any) {\r\n    Object.keys(style || {}).forEach(k => {\r\n        let is_number = pixelFields.indexOf(k) >= 0\r\n        if (is_number && typeof style[k] == \"number\") div.style[k] = style[k]+\"px\"\r\n        else div.style[k] = style[k]\r\n   \r\n    })\r\n}\r\n\r\n\r\ninterface  ICreateElement {\r\n    (type: \"button\", styleOrClass?: string | object, style?: object): HTMLButtonElement;\r\n    (type: \"div\", styleOrClass?: string | object, style?: object): HTMLDivElement;\r\n    (type: string, styleOrClass?: string | object, style?: object): HTMLElement;\r\n}\r\nexport const createElement: ICreateElement = (type: string, styleOrClass?: string | object, style?: object) => {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(type)\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div as any\r\n} \r\n\r\nexport function createDiv(styleOrClass?: string | object, style?: object) {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(\"div\")\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div\r\n}\r\n","import { createDiv, createElement } from \"./components/utils\"\r\n\r\n\r\nexport class Presenter {\r\n    transmissionContainner: HTMLDivElement;\r\n    control: HTMLDivElement;\r\n    mensajes: {[id: string]: HTMLDivElement} = {}\r\n    queue: {result: string, id: string}[] = []\r\n    raw: string = \"\"\r\n    stoped: boolean = false;\r\n    listennerMode: boolean = true;\r\n\r\n    elements: {title?: HTMLElement, roomData?: HTMLElement, timeCounter?: HTMLElement} = {}\r\n\r\n    private __title = \"\";\r\n    constructor( roomId: string, rec?, roomKey?: string) {\r\n        var div = createDiv({width: \"100%\", height: \"100%\"})\r\n        div.className=\"msgContainner\";\r\n        div.id = \"core\"\r\n\r\n        var header = createDiv(\"header\")\r\n        div.append(header)\r\n\r\n        let title = createElement(\"h2\", {margin: \"15px 0\"})\r\n        title.innerHTML = ``;       \r\n        header.append(title)\r\n        this.elements.title = title;\r\n\r\n        let roomData = createDiv({margin: \"15px 0\"})\r\n        roomData.innerHTML = `Id de la sala: ${roomId}`;  \r\n        let svg = createElement(\"img\",  {paddingLeft: 10}) as HTMLImageElement;\r\n        svg.classList.add(\"fullscreen\")\r\n        svg.src = \"/images/fullscreen.svg\";\r\n        svg.onclick = () => {\r\n            document.documentElement.requestFullscreen()\r\n        }\r\n        roomData.append(svg)     \r\n        header.append(roomData)\r\n        this.elements.roomData = roomData;\r\n\r\n        let timeCounter = createDiv({margin: \"15px 0\", fontSize: 30, fontWeight: 600})\r\n        timeCounter.innerHTML = ``;       \r\n        header.append(timeCounter)\r\n        this.elements.timeCounter = timeCounter;\r\n\r\n\r\n        if (rec) this.listennerMode = false;\r\n\r\n        this.control = createDiv(\"navigation\")\r\n        var stopButton = createElement(\"button\")\r\n        stopButton.innerHTML = \"STOP\"\r\n        stopButton.onclick = () => {\r\n            if (this.stoped && this.listennerMode) {\r\n                stopButton.classList.remove(\"disabled\")\r\n                stopButton.innerHTML = \"STOP\"\r\n                this.stoped = false;\r\n            } else {\r\n                stopButton.classList.add(\"disabled\")\r\n                stopButton.innerHTML = \"RESTART\"\r\n                this.stoped = true;\r\n            }\r\n           \r\n            if(rec) {\r\n                console.log(\"STOP RECORDER\", rec);\r\n                rec.stop();\r\n\r\n                var irAlEditor = createElement(\"button\");\r\n                irAlEditor.innerHTML = \"Ir al editor\";\r\n                irAlEditor.onclick = () => {\r\n                    location.href = `/editor/${roomKey}`;\r\n                }\r\n                this.control.append(irAlEditor);\r\n            }\r\n        }\r\n        this.control.append(stopButton)\r\n\r\n        \r\n\r\n\r\n        div.append(this.control)\r\n\r\n        this.transmissionContainner = createDiv(\"transcripciones\", {width: 400, maxHeight: 200,  margin: \"auto auto\", color: \"#ffffff\", fontSize: 20, \r\n        display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"})\r\n        this.transmissionContainner.style.scrollBehavior = \"smooth\";\r\n        div.append(this.transmissionContainner)\r\n\r\n        document.body.append(div)\r\n    }\r\n\r\n    set title(value: string) {\r\n        this.__title = value;\r\n        this.elements.title.innerHTML = value;\r\n    }\r\n    set timeElapsed(value: number) {\r\n        this.elements.timeCounter.innerHTML = (value / 1000 | 0).toString();\r\n    }\r\n\r\n    private render() {\r\n        if (this.listennerMode == true && this.stoped) return;\r\n        while(this.queue.length) {\r\n        \r\n            var mensaje = this.queue.splice(0, 1)[0];\r\n            console.log(mensaje, this.queue)\r\n            if (!this.mensajes[mensaje.id]) {\r\n                var div = createDiv(\"textRow\",{ marginRight: \"4pt\"});\r\n                this.transmissionContainner.append(div);\r\n                this.mensajes[mensaje.id] = div;\r\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\r\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\r\n            } else {\r\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\r\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\r\n            }\r\n        }\r\n     \r\n    }\r\n    append(data: {result: string, id: string}) {\r\n        if (data) {\r\n            this.queue.push(data)   \r\n            this.render();  \r\n        } else {\r\n            console.error(\"Append null\")\r\n        }\r\n\r\n    }\r\n    stop() {\r\n        this.stoped = true;\r\n    }\r\n    resume() {\r\n        this.stoped = false;\r\n        this.render();\r\n    }\r\n}\r\n"]}