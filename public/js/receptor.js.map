{"version":3,"sources":["public/src/components/utils.ts","public/src/presenter.ts","public/src/receptorClient.ts"],"names":["pixelFields","div","style","Object","keys","forEach","k","is_number","indexOf","type","styleOrClass","__style","__className","document","createElement","className","applyStyle","constructor","roomId","rec","roomKey","mensajes","queue","raw","stoped","listennerMode","elements","__title","utils_1","width","height","id","header","append","title","margin","innerHTML","roomData","svg","paddingLeft","classList","add","src","onclick","documentElement","requestFullscreen","timeCounter","fontSize","fontWeight","control","stopButton","remove","console","log","stop","irAlEditor","location","href","transmissionContainner","maxHeight","color","display","flexDirection","overflow","scrollBehavior","body","value","timeElapsed","toString","render","length","mensaje","splice","marginRight","result","scrollTo","top","scrollHeight","data","push","error","resume","path","pathname","presenter","presenter_1","split","slice","socket","io","on","Error","info","eventTitle","emit","connect"],"mappings":"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","file":"","sourcesContent":["const pixelFields = [\"margin\", \"marginLeft\", \"marginRight\", \"marginTop\",\"marginBottom\", \r\n    \"padding\", \"paddingLeft\", \"paddingRight\", \"paddingTop\",\"paddingBottom\",\r\n    \"left\", \"top\", \"right\", \"bottom\",\"width\",\"height\", \"minWidth\", \"minHeight\", \r\n    \"maxWidth\", \"maxHeight\", \"borderWidth\"]\r\nexport function applyStyle(div: HTMLElement, style: any) {\r\n    Object.keys(style || {}).forEach(k => {\r\n        let is_number = pixelFields.indexOf(k) >= 0\r\n        if (is_number && typeof style[k] == \"number\") div.style[k] = style[k]+\"px\"\r\n        else div.style[k] = style[k]\r\n   \r\n    })\r\n}\r\n\r\n\r\ninterface  ICreateElement {\r\n    (type: \"button\", styleOrClass?: string | object, style?: object): HTMLButtonElement;\r\n    (type: \"div\", styleOrClass?: string | object, style?: object): HTMLDivElement;\r\n    (type: string, styleOrClass?: string | object, style?: object): HTMLElement;\r\n}\r\nexport const createElement: ICreateElement = (type: string, styleOrClass?: string | object, style?: object) => {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(type)\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div as any\r\n} \r\n\r\nexport function createDiv(styleOrClass?: string | object, style?: object) {\r\n    var __style = typeof styleOrClass == \"object\"? styleOrClass : style || {}\r\n    var __className = typeof styleOrClass == \"string\"? styleOrClass : \"\"\r\n    var div = document.createElement(\"div\")\r\n    div.className = __className\r\n    applyStyle(div, __style)\r\n    return div\r\n}\r\n","import { createDiv, createElement } from \"./components/utils\"\r\n\r\n\r\nexport class Presenter {\r\n    transmissionContainner: HTMLDivElement;\r\n    control: HTMLDivElement;\r\n    mensajes: {[id: string]: HTMLDivElement} = {}\r\n    queue: {result: string, id: string}[] = []\r\n    raw: string = \"\"\r\n    stoped: boolean = false;\r\n    listennerMode: boolean = true;\r\n\r\n    elements: {title?: HTMLElement, roomData?: HTMLElement, timeCounter?: HTMLElement} = {}\r\n\r\n    private __title = \"\";\r\n    constructor( roomId: string, rec?, roomKey?: string) {\r\n        var div = createDiv({width: \"100%\", height: \"100%\"})\r\n        div.className=\"msgContainner\";\r\n        div.id = \"core\"\r\n\r\n        var header = createDiv(\"header\")\r\n        div.append(header)\r\n\r\n        let title = createElement(\"h2\", {margin: \"15px 0\"})\r\n        title.innerHTML = ``;       \r\n        header.append(title)\r\n        this.elements.title = title;\r\n\r\n        let roomData = createDiv({margin: \"15px 0\"})\r\n        roomData.innerHTML = `Id de la sala: ${roomId}`;  \r\n        let svg = createElement(\"img\",  {paddingLeft: 10}) as HTMLImageElement;\r\n        svg.classList.add(\"fullscreen\")\r\n        svg.src = \"/images/fullscreen.svg\";\r\n        svg.onclick = () => {\r\n            document.documentElement.requestFullscreen()\r\n        }\r\n        roomData.append(svg)     \r\n        header.append(roomData)\r\n        this.elements.roomData = roomData;\r\n\r\n        let timeCounter = createDiv({margin: \"15px 0\", fontSize: 30, fontWeight: 600})\r\n        timeCounter.innerHTML = ``;       \r\n        header.append(timeCounter)\r\n        this.elements.timeCounter = timeCounter;\r\n\r\n\r\n        if (rec) this.listennerMode = false;\r\n\r\n        this.control = createDiv(\"navigation\")\r\n        var stopButton = createElement(\"button\")\r\n        stopButton.innerHTML = \"STOP\"\r\n        stopButton.onclick = () => {\r\n            if (this.stoped && this.listennerMode) {\r\n                stopButton.classList.remove(\"disabled\")\r\n                stopButton.innerHTML = \"STOP\"\r\n                this.stoped = false;\r\n            } else {\r\n                stopButton.classList.add(\"disabled\")\r\n                stopButton.innerHTML = \"RESTART\"\r\n                this.stoped = true;\r\n            }\r\n           \r\n            if(rec) {\r\n                console.log(\"STOP RECORDER\", rec);\r\n                rec.stop();\r\n\r\n                var irAlEditor = createElement(\"button\");\r\n                irAlEditor.innerHTML = \"Ir al editor\";\r\n                irAlEditor.onclick = () => {\r\n                    location.href = `/editor/${roomKey}`;\r\n                }\r\n                this.control.append(irAlEditor);\r\n            }\r\n        }\r\n        this.control.append(stopButton)\r\n\r\n        \r\n\r\n\r\n        div.append(this.control)\r\n\r\n        this.transmissionContainner = createDiv(\"transcripciones\", {width: 400, maxHeight: 200,  margin: \"auto auto\", color: \"#ffffff\", fontSize: 20, \r\n        display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"})\r\n        this.transmissionContainner.style.scrollBehavior = \"smooth\";\r\n        div.append(this.transmissionContainner)\r\n\r\n        document.body.append(div)\r\n    }\r\n\r\n    set title(value: string) {\r\n        this.__title = value;\r\n        this.elements.title.innerHTML = value;\r\n    }\r\n    set timeElapsed(value: number) {\r\n        this.elements.timeCounter.innerHTML = (value / 1000 | 0).toString();\r\n    }\r\n\r\n    private render() {\r\n        if (this.listennerMode == true && this.stoped) return;\r\n        while(this.queue.length) {\r\n        \r\n            var mensaje = this.queue.splice(0, 1)[0];\r\n            console.log(mensaje, this.queue)\r\n            if (!this.mensajes[mensaje.id]) {\r\n                var div = createDiv(\"textRow\",{ marginRight: \"4pt\"});\r\n                this.transmissionContainner.append(div);\r\n                this.mensajes[mensaje.id] = div;\r\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\r\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\r\n            } else {\r\n                this.mensajes[mensaje.id].innerHTML = mensaje.result;\r\n                this.transmissionContainner.scrollTo({top: this.transmissionContainner.scrollHeight})\r\n            }\r\n        }\r\n     \r\n    }\r\n    append(data: {result: string, id: string}) {\r\n        if (data) {\r\n            this.queue.push(data)   \r\n            this.render();  \r\n        } else {\r\n            console.error(\"Append null\")\r\n        }\r\n\r\n    }\r\n    stop() {\r\n        this.stoped = true;\r\n    }\r\n    resume() {\r\n        this.stoped = false;\r\n        this.render();\r\n    }\r\n}\r\n","import { Presenter } from \"./presenter\";\r\ndeclare const io : typeof import(\"socket.io-client\").default\r\n\r\n\r\nvar path = location.pathname || \"\";\r\nvar presenter = new Presenter( path.split(\"/\").slice(2)[0] )\r\n\r\n\r\nvar socket = io()\r\n\r\n\r\nsocket.on(\"disconnect\", () => {\r\n    console.log(\"disconected\")\r\n})\r\nsocket.on(\"connect\", () => {\r\n    var roomId = location.pathname || \"\"\r\n    if (roomId.length < 2) {\r\n        throw new Error(\"sala invalida\")\r\n    }\r\n\r\n    socket.on(\"info\", (info: {photoUrl: string, eventTitle: string}) => {\r\n        presenter.title = info.eventTitle;\r\n    })\r\n    roomId = roomId.split(\"/\").slice(2)[0];\r\n    socket.emit(\"join\", {roomId: roomId});  \r\n\r\n})\r\n\r\n\r\nsocket.on(\"joined\",  (roomId) => {\r\n    socket.on(\"mensaje\", data => {\r\n        presenter.append(data)\r\n    })  \r\n    console.log(\"Joined to room\")\r\n});  \r\n\r\nsocket.connect()"]}